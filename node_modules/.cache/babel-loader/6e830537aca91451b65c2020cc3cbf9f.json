{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/singer/SingerAlbum.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/singer/SingerAlbum.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5wYWQtc3RhcnQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8v5q2M5omL5LiT6L6R5p+l6K+i5p2h5Lu2CiAgICAgIHF1ZXJ5SW5mbzogewogICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgICAgbGltaXQ6IDQsCiAgICAgICAgb2Zmc2V0OiAwCiAgICAgIH0sCiAgICAgIC8v5b2T5YmN5q2M5omL55qEaWQKICAgICAgc2luZ2VySWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5pZCwKICAgICAgLy/mrYzmiYvng63pl6g1MOmmlgogICAgICBob3Q1MFNvbmdzOiBbXSwKICAgICAgLy81MOmmlum7mOiupOWxleekujEw6aaWCiAgICAgIGRlZmF1bHRTaG93OiAxMCwKICAgICAgLy/niLbnu4Tku7blvZPliY3mkq3mlL7nmoTpn7PkuZDnmoRpZAogICAgICBjdXJJZDogcGFyc2VJbnQod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJQbGF5TXVzaWNJZCcpKSwKICAgICAgLy/lvZPliY3mrYzmiYvng63pl6jkuJPovpHkv6Hmga8o5LiN5YyF5ZCr5LiT6L6R5YaF5ZCr55qE5q2M5puyKQogICAgICBob3RBbGJ1bTogW10sCiAgICAgIC8v5b2T5YmN5q2M5omL5LiT6L6R5YaF5q2M5puy5L+h5oGvCiAgICAgIGFsYnVtTXVzaWNJbmZvOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIC8v6I635Y+W5q2M5puy54Ot6ZeoNTDpppbmrYwKICAgIHRoaXMuZ2V0SG90NTBNdXNpYygpOyAvL+iOt+W+l+atjOaJi+eahOeDremXqOS4k+i+keS/oeaBrwoKICAgIHRoaXMuZ2V0SG90QWxidW0oKTsKICAgIC8qKgogICAgICog5rOo5YaM55uR5ZCs55qE5LqL5Lu2IOWcqG1haW4uanPkuK3lrprkuYnkuoYKICAgICAqICjnm5HlkKzlvZPliY3mkq3mlL7pn7PkuZDnmoRpZOWPmOWMliDlk43lupTlvI/nmoTliIfmjaLlvZPliY3mkq3mlL7nmoTpn7PkuZDnmoTliY3nvIDlm77moIcpCiAgICAgKi8KCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2V0SXRlbScsIGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMuY3VySWQgPSBwYXJzZUludChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VyUGxheU11c2ljSWQnKSk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v6I635Y+W5q2M5puy54Ot6ZeoNTDpppbmrYwKICAgIGdldEhvdDUwTXVzaWM6IGZ1bmN0aW9uIGdldEhvdDUwTXVzaWMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5nZXQoJ2FydGlzdC90b3Avc29uZycsIHsKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGlkOiB0aGlzLnNpbmdlcklkCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIuaG90NTBTb25ncyA9IHJlcy5kYXRhLnNvbmdzOyAvL+WkhOeQhuaXtumVv+aVsOaNrgoKICAgICAgICBfdGhpczIuaG90NTBTb25ncy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICB2YXIgZHQgPSBuZXcgRGF0ZShpdGVtLmR0KTsKICAgICAgICAgIHZhciBtbSA9IChkdC5nZXRNaW51dGVzKCkgKyAnJykucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgICAgIHZhciBzcyA9IChkdC5nZXRTZWNvbmRzKCkgKyAnJykucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgICAgIGl0ZW0uZHQgPSBtbSArICc6JyArIHNzOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICAvL+WIh+aNouW9k+WJjeaYvuekuueDremXqDUw6aaWCiAgICBjaGFuZ2VEZWZhdWx0TnVtOiBmdW5jdGlvbiBjaGFuZ2VEZWZhdWx0TnVtKCkgewogICAgICB0aGlzLiQoJy5zaG93JykucmVtb3ZlKCk7CiAgICAgIHRoaXMuZGVmYXVsdFNob3cgPSA1MDsKICAgIH0sCiAgICAvL+iOt+WPluatjOaJi+eDremXqOS4k+i+kQogICAgZ2V0SG90QWxidW06IGZ1bmN0aW9uIGdldEhvdEFsYnVtKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuJGh0dHAuZ2V0KCdhcnRpc3QvYWxidW0nLCB7CiAgICAgICAgcGFyYW1zOiB0aGlzLnF1ZXJ5SW5mbwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczMuaG90QWxidW0gPSByZXMuZGF0YS5ob3RBbGJ1bXM7CgogICAgICAgIF90aGlzMy5ob3RBbGJ1bS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBfdGhpczMuJGh0dHAuZ2V0KCdhbGJ1bScsIHsKICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgaWQ6IGl0ZW0uaWQKICAgICAgICAgICAgfQogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIC8v5aSE55CG5pe26ZW/IOWGjeaUvuWFpeaVsOaNrgogICAgICAgICAgICByZXMuZGF0YS5zb25ncy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgdmFyIGR0ID0gbmV3IERhdGUoaXRlbS5kdCk7CiAgICAgICAgICAgICAgdmFyIG1tID0gKGR0LmdldE1pbnV0ZXMoKSArICcnKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICAgICAgICAgIHZhciBzcyA9IChkdC5nZXRTZWNvbmRzKCkgKyAnJykucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgICAgICAgICBpdGVtLmR0ID0gbW0gKyAnOicgKyBzczsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBfdGhpczMuYWxidW1NdXNpY0luZm8ucHVzaChyZXMuZGF0YSk7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsgLy/lpITnkIbml7bplb/mlbDmja4KCgogICAgICAgIF90aGlzMy5ob3RBbGJ1bS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICB2YXIgZHQgPSBuZXcgRGF0ZShpdGVtLmR0KTsKICAgICAgICAgIHZhciBtbSA9IChkdC5nZXRNaW51dGVzKCkgKyAnJykucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgICAgIHZhciBzcyA9IChkdC5nZXRTZWNvbmRzKCkgKyAnJykucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgICAgIGl0ZW0uZHQgPSBtbSArICc6JyArIHNzOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICAvL+WIhumhteaPkuS7tumhteaVsOaUueWPmAogICAgaGFuZGxlQ3VycmVudENoYW5nZTogZnVuY3Rpb24gaGFuZGxlQ3VycmVudENoYW5nZShuZXdQYWdlKSB7CiAgICAgIHRoaXMucXVlcnlJbmZvLm9mZnNldCA9IChuZXdQYWdlIC0gMSkgKiB0aGlzLnF1ZXJ5SW5mby5saW1pdDsKICAgICAgdGhpcy5nZXRIb3RBbGJ1bSgpOwogICAgfSwKICAgIC8v5pKt5pS+54Ot6Zeo5LqU5Y2B6aaWCiAgICBwbGF5SG90NTBNdXNpYzogZnVuY3Rpb24gcGxheUhvdDUwTXVzaWMocm93KSB7CiAgICAgIHZhciBwbGF5TGlzdCA9IFtdOwogICAgICB0aGlzLmhvdDUwU29uZ3MuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHBsYXlMaXN0LnB1c2goaXRlbS5pZCk7CiAgICAgIH0pOwogICAgICB0aGlzLiRlbWl0KCdzZXRTb25nTGlzdEluZm8nLCBwbGF5TGlzdCwgcm93LmlkKTsKICAgIH0sCiAgICAvL+aSreaUvuS4k+i+keS4reeahOatjOabsgogICAgcGxheUFsYnVtTXVzaWM6IGZ1bmN0aW9uIHBsYXlBbGJ1bU11c2ljKHJvdykgewogICAgICB0aGlzLiRlbWl0KCdzZXRTb25nTGlzdEluZm8nLCB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3BsYXlMaXN0JyksIHJvdy5pZCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SingerAlbum.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,EAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EADA;AAEA,QAAA,KAAA,EAAA,CAFA;AAGA,QAAA,MAAA,EAAA;AAHA,OAFA;AAOA;AACA,MAAA,QAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EARA;AASA;AACA,MAAA,UAAA,EAAA,EAVA;AAWA;AACA,MAAA,WAAA,EAAA,EAZA;AAaA;AACA,MAAA,KAAA,EAAA,QAAA,CAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAdA;AAeA;AACA,MAAA,QAAA,EAAA,EAhBA;AAiBA;AACA,MAAA,cAAA,EAAA;AAlBA,KAAA;AAoBA,GAtBA;AAuBA,EAAA,OAvBA,qBAuBA;AAAA;;AACA;AACA,SAAA,aAAA,GAFA,CAGA;;AACA,SAAA,WAAA;AACA;AACA;AACA;AACA;;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AACA,KAFA;AAGA,GAnCA;AAoCA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAFA,2BAEA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,iBAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,EAAA,EAAA,KAAA;AAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CADA,CAEA;;AACA,QAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,EAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,cAAA,EAAA,GAAA,CAAA,EAAA,CAAA,UAAA,KAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,cAAA,EAAA,GAAA,CAAA,EAAA,CAAA,UAAA,KAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AAEA,UAAA,IAAA,CAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA;AACA,SANA;AAOA,OAVA;AAWA,KAdA;AAeA;AACA,IAAA,gBAhBA,8BAgBA;AACA,WAAA,CAAA,CAAA,OAAA,EAAA,MAAA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,KAnBA;AAoBA;AACA,IAAA,WArBA,yBAqBA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,cAAA,EAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,SAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA,EAAA;AAAA,YAAA,MAAA,EAAA;AAAA,cAAA,EAAA,EAAA,IAAA,CAAA;AAAA;AAAA,WAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,kBAAA,EAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,kBAAA,EAAA,GAAA,CAAA,EAAA,CAAA,UAAA,KAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,kBAAA,EAAA,GAAA,CAAA,EAAA,CAAA,UAAA,KAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AAEA,cAAA,IAAA,CAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA;AACA,aANA;;AAOA,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA;AACA,WAVA;AAWA,SAZA,EAFA,CAeA;;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,EAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,cAAA,EAAA,GAAA,CAAA,EAAA,CAAA,UAAA,KAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,cAAA,EAAA,GAAA,CAAA,EAAA,CAAA,UAAA,KAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AAEA,UAAA,IAAA,CAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA;AACA,SANA;AAOA,OAvBA;AAwBA,KA9CA;AA+CA;AACA,IAAA,mBAhDA,+BAgDA,OAhDA,EAgDA;AACA,WAAA,SAAA,CAAA,MAAA,GAAA,CAAA,OAAA,GAAA,CAAA,IAAA,KAAA,SAAA,CAAA,KAAA;AACA,WAAA,WAAA;AACA,KAnDA;AAoDA;AACA,IAAA,cArDA,0BAqDA,GArDA,EAqDA;AACA,UAAA,QAAA,GAAA,EAAA;AACA,WAAA,UAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AACA,OAFA;AAGA,WAAA,KAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AACA,KA3DA;AA4DA;AACA,IAAA,cA7DA,0BA6DA,GA7DA,EA6DA;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,GAAA,CAAA,EAAA;AACA;AA/DA;AApCA,CAAA","sourcesContent":["<template>\n    <div style=\"margin-top: 50px;margin-bottom: 75px;\">\n\n        <!--默认的头部热门五十首-->\n        <el-row>\n            <el-col :span=\"4\" :offset=\"2\">\n                <el-image src=\"imgs/top50.png\" style=\"width: 150px;height: 150px;\"></el-image>\n            </el-col>\n\n            <el-col :span=\"8\">\n                热门50曲\n                <el-table :data=\"hot50Songs.slice(0,defaultShow)\" highlight-current-row stripe\n                          :show-header=\"false\" @row-dblclick=\"playHot50Music\"\n                          style=\"margin-top: 15px;cursor: context-menu;border: 1px solid rgb(230,230,230)\">\n\n                    <el-table-column label=\"#\" type=\"index\">\n                        <template scope=\"scope\">\n                            <img v-if=\"curId === scope.row.id\" src=\"imgs/isPlay.png\" alt=\"\">\n                            <p v-else>{{scope.$index+1 >= 10 ? scope.$index+1 : ('0'+(scope.$index+1)).toString()}}</p>\n                        </template>\n                    </el-table-column>\n\n                    <el-table-column label=\"操作\" width=\"70px;\">\n                        <template>\n                            <i class=\"el-icon-star-off\" style=\"font-size: 18px;cursor: pointer\"></i>\n                            <i class=\"el-icon-download\" style=\"margin-left: 10px;font-size: 18px;cursor:pointer;\"></i>\n                        </template>\n                    </el-table-column>\n\n                    <el-table-column v-if=\"false\" label=\"id\" prop=\"id\"></el-table-column>\n\n                    <el-table-column label=\"音乐标题\" prop=\"name\"></el-table-column>\n\n                    <el-table-column label=\"时长\" prop=\"dt\" width=\"80px;\"></el-table-column>\n\n                </el-table>\n                <p class=\"show\" style=\"margin-top: 15px;cursor: pointer;\" @click=\"changeDefaultNum\">查看全部50首></p>\n            </el-col>\n        </el-row>\n\n        <!--所有专辑信息-->\n        <el-row v-for=\"item in albumMusicInfo\" style=\"margin-top: 45px;\">\n            <el-col :span=\"4\" :offset=\"2\">\n                <el-image :src=\"item.album.picUrl\" style=\"width: 150px;height: 150px;\"></el-image>\n                <span style=\"position:absolute;left: 140px;top: 150px;\">{{item.album.publishTime | dateFormatToYMD}}</span>\n            </el-col>\n\n            <el-col :span=\"8\">\n                {{item.album.name}}\n                <el-table :data=\"item.songs\" highlight-current-row stripe\n                          :show-header=\"false\" @row-dblclick=\"playAlbumMusic\"\n                          style=\"margin-top: 15px;cursor: context-menu;border: 1px solid rgb(230,230,230)\"\n                >\n\n                    <el-table-column type=\"index\">\n                        <template scope=\"scope\">\n                            <img v-if=\"curId === scope.row.id\" src=\"imgs/isPlay.png\" alt=\"\">\n                            <p v-else>{{scope.$index+1 >= 10 ? scope.$index+1 : ('0'+(scope.$index+1)).toString()}}</p>\n                        </template>\n                    </el-table-column>\n\n                    <el-table-column width=\"70px;\">\n                        <template>\n                            <i class=\"el-icon-star-off\" style=\"font-size: 18px;cursor: pointer\"></i>\n                            <i class=\"el-icon-download\" style=\"margin-left: 10px;font-size: 18px;cursor:pointer;\"></i>\n                        </template>\n                    </el-table-column>\n\n                    <el-table-column v-if=\"false\" label=\"id\" prop=\"id\"></el-table-column>\n\n                    <el-table-column prop=\"name\"></el-table-column>\n\n                    <el-table-column prop=\"dt\" width=\"80px;\"></el-table-column>\n\n                </el-table>\n            </el-col>\n        </el-row>\n        <!--分页-->\n        <el-pagination background\n                       layout=\"prev,next\"  :page-size=\"queryInfo.limit\"\n                       @current-change=\"handleCurrentChange\">\n        </el-pagination>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                //歌手专辑查询条件\n                queryInfo: {\n                    id: this.$route.params.id,\n                    limit: 4,\n                    offset: 0,\n                },\n                //当前歌手的id\n                singerId: this.$route.params.id,\n                //歌手热门50首\n                hot50Songs: [],\n                //50首默认展示10首\n                defaultShow: 10,\n                //父组件当前播放的音乐的id\n                curId: parseInt(window.localStorage.getItem('curPlayMusicId')),\n                //当前歌手热门专辑信息(不包含专辑内含的歌曲)\n                hotAlbum: [],\n                //当前歌手专辑内歌曲信息\n                albumMusicInfo: []\n            }\n        },\n        created() {\n            //获取歌曲热门50首歌\n            this.getHot50Music()\n            //获得歌手的热门专辑信息\n            this.getHotAlbum()\n            /**\n             * 注册监听的事件 在main.js中定义了\n             * (监听当前播放音乐的id变化 响应式的切换当前播放的音乐的前缀图标)\n             */\n            window.addEventListener('setItem', ()=> {\n                this.curId = parseInt(localStorage.getItem('curPlayMusicId'))\n            })\n        },\n        methods: {\n            //获取歌曲热门50首歌\n            getHot50Music() {\n                this.$http.get('artist/top/song', {params: {id: this.singerId}}).then(res => {\n                    this.hot50Songs = res.data.songs;\n                    //处理时长数据\n                    this.hot50Songs.forEach(item => {\n                        const dt = new Date(item.dt)\n                        const mm = (dt.getMinutes() + '').padStart(2, '0')\n                        const ss = (dt.getSeconds() + '').padStart(2, '0')\n\n                        item.dt = mm + ':' + ss\n                    })\n                })\n            },\n            //切换当前显示热门50首\n            changeDefaultNum() {\n                this.$('.show').remove()\n                this.defaultShow = 50\n            },\n            //获取歌手热门专辑\n            getHotAlbum() {\n                this.$http.get('artist/album', {params: this.queryInfo}).then(res => {\n                    this.hotAlbum = res.data.hotAlbums\n                    this.hotAlbum.forEach(item => {\n                        this.$http.get('album', {params: {id: item.id}}).then(res => {\n                            //处理时长 再放入数据\n                            res.data.songs.forEach(item => {\n                                const dt = new Date(item.dt)\n                                const mm = (dt.getMinutes() + '').padStart(2, '0')\n                                const ss = (dt.getSeconds() + '').padStart(2, '0')\n\n                                item.dt = mm + ':' + ss\n                            })\n                            this.albumMusicInfo.push(res.data)\n                        })\n                    })\n                    //处理时长数据\n                    this.hotAlbum.forEach(item => {\n                        const dt = new Date(item.dt)\n                        const mm = (dt.getMinutes() + '').padStart(2, '0')\n                        const ss = (dt.getSeconds() + '').padStart(2, '0')\n\n                        item.dt = mm + ':' + ss\n                    })\n                })\n            },\n            //分页插件页数改变\n            handleCurrentChange(newPage) {\n                this.queryInfo.offset = (newPage - 1) * this.queryInfo.limit\n                this.getHotAlbum();\n            },\n            //播放热门五十首\n            playHot50Music(row) {\n                var playList = []\n                this.hot50Songs.forEach(item => {\n                    playList.push(item.id)\n                })\n                this.$emit('setSongListInfo', playList, row.id)\n            },\n            //播放专辑中的歌曲\n            playAlbumMusic(row) {\n                this.$emit('setSongListInfo', window.localStorage.getItem('playList'), row.id)\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components/findMusic/singer"}]}