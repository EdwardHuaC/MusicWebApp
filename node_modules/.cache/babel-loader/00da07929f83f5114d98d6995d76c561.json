{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/search/SearchBySong.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/search/SearchBySong.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VhcmNoRGF0YTogZGVjb2RlVVJJQ29tcG9uZW50KHRoaXMuJHJvdXRlLnBhcmFtcy5kYXRhKSwKICAgICAgLy/lvZPliY3nmoTmkJzntKLmnaHku7YKICAgICAgcXVlcnlJbmZvOiB7CiAgICAgICAga2V5d29yZHM6IHRoaXMuJHJvdXRlLnBhcmFtcy5kYXRhLAogICAgICAgIGxpbWl0OiAzMCwKICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgdHlwZTogMQogICAgICAgIC8qIHR5cGUKICAgICAgICAgICAg6buY6K6k5Li6MQogICAgICAgICAgICAxOiDljZXmm7IgMTAwOuatjOaJiyAxMDAwOuatjOWNlSAxMDE0OuinhumikQogICAgICAgICovCgogICAgICB9LAogICAgICAvL+afpeivoue7k+aenOaAu+aVsAogICAgICBzb25nVG90YWw6IDAsCiAgICAgIC8v5q2M5puy5pWw55qE57uT5p6c6ZuGCiAgICAgIHNvbmdMaXN0OiBbXSwKICAgICAgLy/niLbnu4Tku7blvZPliY3mkq3mlL7nmoTpn7PkuZDnmoRpZAogICAgICBjdXJJZDogcGFyc2VJbnQod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJQbGF5TXVzaWNJZCcpKQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIC8v6I635Y+W5pCc57Si57uT5p6c6ZuGCiAgICB0aGlzLmdldFNlYXJjaFJlc3VsdCgpOyAvL+azqOWGjOebkeWQrOeahOS6i+S7tiDlnKhtYWluLmpz5Lit5a6a5LmJ5LqGCgogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3NldEl0ZW0nLCBmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLmN1cklkID0gcGFyc2VJbnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1clBsYXlNdXNpY0lkJykpOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRTZWFyY2hSZXN1bHQ6IGZ1bmN0aW9uIGdldFNlYXJjaFJlc3VsdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldCgnL3NlYXJjaCcsIHsKICAgICAgICBwYXJhbXM6IHRoaXMucXVlcnlJbmZvCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMi5zb25nTGlzdCA9IHJlcy5kYXRhLnJlc3VsdC5zb25nczsKICAgICAgICBfdGhpczIuc29uZ1RvdGFsID0gcmVzLmRhdGEucmVzdWx0LnNvbmdDb3VudDsgLy/lpITnkIbml7bplb9kdAoKICAgICAgICBfdGhpczIuc29uZ0xpc3QuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgdmFyIHRpbWUgPSBpdGVtLmR1cmF0aW9uIC8gMTAwMDsgLy/liIbpkp8KCiAgICAgICAgICB2YXIgbWludXRlID0gdGltZSAvIDYwOwogICAgICAgICAgdmFyIG1pbnV0ZXMgPSBwYXJzZUludChtaW51dGUpOwoKICAgICAgICAgIGlmIChtaW51dGVzIDwgMTApIHsKICAgICAgICAgICAgbWludXRlcyA9ICIwIiArIG1pbnV0ZXM7CiAgICAgICAgICB9IC8v56eSCgoKICAgICAgICAgIHZhciBzZWNvbmQgPSB0aW1lICUgNjA7CiAgICAgICAgICB2YXIgc2Vjb25kcyA9IE1hdGgucm91bmQoc2Vjb25kKTsKCiAgICAgICAgICBpZiAoc2Vjb25kcyA8IDEwKSB7CiAgICAgICAgICAgIHNlY29uZHMgPSAiMCIgKyBzZWNvbmRzOwogICAgICAgICAgfQoKICAgICAgICAgIGl0ZW0uZHVyYXRpb24gPSAiIi5jb25jYXQobWludXRlcywgIjoiKS5jb25jYXQoc2Vjb25kcyk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8v5Y+M5Ye75q2M5puy5re75Yqg5pWw5o2u6L+b5Y67LOW5tuW+queOr+aSreaUvijlkJHniLbnu4Tku7bkvKDpgJLlj4LmlbApCiAgICBwbGF5TXVzaWM6IGZ1bmN0aW9uIHBsYXlNdXNpYyhyb3cpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldCgnc29uZy91cmwnLCB7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBpZDogcm93LmlkCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuZGF0YVswXS51cmwgIT09ICcnKSB7CiAgICAgICAgICBfdGhpczMuJGh0dHAuZ2V0KCdzb25nL2RldGFpbCcsIHsKICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgaWRzOiByb3cuaWQKICAgICAgICAgICAgfQogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocikgewogICAgICAgICAgICBfdGhpczMuJGVtaXQoJ3NldE11c2ljVXJsJywgcmVzLmRhdGEuZGF0YVswXS51cmwsIHIuZGF0YS5zb25nc1swXSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8v5YiG6aG15o+S5Lu26aG15pWw5pS55Y+YCiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDdXJyZW50Q2hhbmdlKG5ld1BhZ2UpIHsKICAgICAgdGhpcy5xdWVyeUluZm8ub2Zmc2V0ID0gKG5ld1BhZ2UgLSAxKSAqIHRoaXMucXVlcnlJbmZvLmxpbWl0OwogICAgICBpZiAodGhpcy5xdWVyeUluZm8ub2Zmc2V0ID49IHRoaXMuc29uZ1RvdGFsKSB0aGlzLnF1ZXJ5SW5mby5vZmZzZXQgPSB0aGlzLnNvbmdUb3RhbDsKICAgICAgdGhpcy5nZXRTZWFyY2hSZXN1bHQoKTsKICAgIH0sCiAgICAvL+i3s+i9rOatjOaJiwogICAgdG9TaW5nZXJQYWdlOiBmdW5jdGlvbiB0b1NpbmdlclBhZ2UoaWQpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9zaW5nZXIvJyArIGlkKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SearchBySong.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"margin-bottom: 75px\">\n        <!--歌曲列表-->\n        <el-table :data=\"songList\" ref=\"playTable\" highlight-current-row border stripe\n                  style=\"cursor: context-menu;\" @row-dblclick=\"playMusic\">\n\n            <el-table-column label=\"#\" type=\"index\">\n                <template scope=\"scope\">\n                    <img v-if=\"curId === scope.row.id\" src=\"imgs/isPlay.png\" alt=\"\">\n                    <p v-else>{{scope.$index+1}}</p>\n                </template>\n            </el-table-column>\n\n\n            <el-table-column v-if=\"false\" label=\"id\" prop=\"id\"></el-table-column>\n\n            <el-table-column label=\"音乐标题\" prop=\"name\"></el-table-column>\n\n            <el-table-column label=\"歌手\" width=\"80px;\">\n                <template scope=\"scope\">\n                <span v-for=\"(item,index) in scope.row.artists\" style=\"cursor: pointer\" @click=\"toSingerPage(item.id)\">\n                    {{\n                    index === 0 && scope.row.artists.length > 1 && index !== scope.row.artists.length-1\n                    ? item.name +'/' : item.name\n                    }}\n                </span>\n                </template>\n            </el-table-column>\n\n            <el-table-column label=\"专辑名\" prop=\"album.name\"></el-table-column>\n\n            <el-table-column label=\"时长\" prop=\"duration\" width=\"80px;\"></el-table-column>\n\n        </el-table>\n        <!--分页-->\n        <el-pagination\n                layout=\"prev, pager, next\" :page-size=\"queryInfo.limit\"\n                :total=\"songTotal\" @current-change=\"handleCurrentChange\">\n        </el-pagination>\n    </div>\n\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                searchData: decodeURIComponent(this.$route.params.data),\n                //当前的搜索条件\n                queryInfo: {\n                    keywords: this.$route.params.data,\n                    limit: 30,\n                    offset: 0,\n                    type: 1\n                    /* type\n                        默认为1\n                        1: 单曲 100:歌手 1000:歌单 1014:视频\n                    */\n                },\n                //查询结果总数\n                songTotal: 0,\n                //歌曲数的结果集\n                songList: [],\n                //父组件当前播放的音乐的id\n                curId: parseInt(window.localStorage.getItem('curPlayMusicId')),\n            }\n        },\n        created() {\n            //获取搜索结果集\n            this.getSearchResult()\n            //注册监听的事件 在main.js中定义了\n            window.addEventListener('setItem', () => {\n                this.curId = parseInt(localStorage.getItem('curPlayMusicId'))\n            })\n        },\n        methods: {\n            getSearchResult() {\n                this.$http.get('/search', {params: this.queryInfo}).then(res => {\n                    this.songList = res.data.result.songs\n                    this.songTotal = res.data.result.songCount\n                    //处理时长dt\n                    this.songList.forEach(item => {\n                        var time = item.duration / 1000\n                        //分钟\n                        var minute = time / 60;\n                        var minutes = parseInt(minute);\n                        if (minutes < 10) {\n                            minutes = \"0\" + minutes;\n                        }\n                        //秒\n                        var second = time % 60;\n                        var seconds = Math.round(second);\n                        if (seconds < 10) {\n                            seconds = \"0\" + seconds;\n                        }\n                        item.duration = `${minutes}:${seconds}`;\n                    })\n                })\n            },\n            //双击歌曲添加数据进去,并循环播放(向父组件传递参数)\n            playMusic(row) {\n                this.$http.get('song/url', {params: {id: row.id}}).then(res => {\n                    if (res.data.data[0].url !== '') {\n                        this.$http.get('song/detail', {params: {ids: row.id}}).then(r => {\n                            this.$emit('setMusicUrl', res.data.data[0].url, r.data.songs[0])\n                        })\n                    }\n\n                })\n            },\n            //分页插件页数改变\n            handleCurrentChange(newPage) {\n                this.queryInfo.offset = (newPage - 1) * this.queryInfo.limit\n                if (this.queryInfo.offset >= this.songTotal) this.queryInfo.offset = this.songTotal\n                this.getSearchResult();\n            },\n            //跳转歌手\n            toSingerPage(id) {\n                this.$router.push('/singer/' + id)\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components/findMusic/search"}]}