{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/singer/SingerDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/singer/SingerDetail.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL+W9k+WJjeatjOaJi+eahGlkCiAgICAgIHNpbmdlcklkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgIC8v5b2T5YmN5q2M5omL55qE5L+h5oGvCiAgICAgIHNpbmdlckluZm86IHsKICAgICAgICBhcnRpc3Q6IHsKICAgICAgICAgIGltZzF2MVVybDogJycKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgLy/ojrflj5bmrYzmiYvnmoTkv6Hmga8KICAgIHRoaXMuZ2V0U2luZ2VySW5mbygpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0U2luZ2VySW5mbzogZnVuY3Rpb24gZ2V0U2luZ2VySW5mbygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJGh0dHAuZ2V0KCdhcnRpc3RzJywgewogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWQ6IHRoaXMuc2luZ2VySWQKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnNpbmdlckluZm8gPSByZXMuZGF0YTsKICAgICAgfSk7CiAgICB9LAogICAgLy/osIPnlKjniLbnsbvnmoTmlrnms5Xmkq3mlL7pn7PkuZAKICAgIHNldFNvbmdMaXN0SW5mbzogZnVuY3Rpb24gc2V0U29uZ0xpc3RJbmZvKHBsYXlMaXN0LCBjdXJJZCkgewogICAgICB0aGlzLiRlbWl0KCdzZXRTb25nTGlzdEluZm8nLCBwbGF5TGlzdCwgY3VySWQpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["SingerDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,QAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAFA;AAGA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,SAAA,EAAA;AADA;AADA;AAJA,KAAA;AAWA,GAbA;AAcA,EAAA,OAdA,qBAcA;AACA;AACA,SAAA,aAAA;AACA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,SAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,EAAA,EAAA,KAAA;AAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA;AACA,OAFA;AAGA,KALA;AAMA;AACA,IAAA,eAPA,2BAOA,QAPA,EAOA,KAPA,EAOA;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,KAAA;AACA;AATA;AAlBA,CAAA","sourcesContent":["<template>\n    <el-container>\n\n        <el-header height=\"320px;\">\n            <el-row :span=\"8\">\n                <el-image :src=\"singerInfo.artist.img1v1Url\" style=\"width: 300px;height: 300px;\"></el-image>\n\n                <el-tag type=\"danger\"\n                        style=\"position: absolute;left:330px;border: 1px solid rgb(198,47,47);background-color: rgb(198,47,47);color: white\">\n                    歌手\n                </el-tag>\n                <span style=\"position: absolute;left: 390px;top: 2px;font-size: 20px;\">{{singerInfo.artist.name}}</span>\n                <i class=\"el-icon-headset\" style=\"position:absolute;font-size: 15px;top: 80px;left: 330px;\">\n                    单曲数: {{singerInfo.artist.musicSize}}\n                </i>\n                <i class=\"el-icon-first-aid-kit\" style=\"position:absolute;font-size: 15px;top: 120px;left: 330px;\">\n                    专辑数: {{singerInfo.artist.albumSize}}\n                </i>\n                <i class=\"el-icon-video-play\" style=\"position:absolute;font-size: 15px;top: 160px;left: 330px;\">\n                    MV数: {{singerInfo.artist.mvSize}}\n                </i>\n            </el-row>\n        </el-header>\n\n        <el-main>\n            <el-menu :default-active=\"/album/+`${this.singerId}`\" :router=\"true\" mode=\"horizontal\">\n                <el-menu-item :index='/album/+`${this.singerId}`'>专辑</el-menu-item>\n                <el-menu-item :index='/singerMv/+`${this.singerId}`'>MV</el-menu-item>\n                <el-menu-item :index='/singerDesc/+`${this.singerId}`'>歌手详情</el-menu-item>\n            </el-menu>\n\n            <router-view @setSongListInfo=\"setSongListInfo\"></router-view>\n\n        </el-main>\n    </el-container>\n\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                //当前歌手的id\n                singerId: this.$route.params.id,\n                //当前歌手的信息\n                singerInfo: {\n                    artist: {\n                        img1v1Url: ''\n                    }\n                }\n\n            }\n        },\n        created() {\n            //获取歌手的信息\n            this.getSingerInfo();\n        },\n        methods: {\n            getSingerInfo() {\n                this.$http.get('artists', {params: {id: this.singerId}}).then(res => {\n                    this.singerInfo = res.data\n                })\n            },\n            //调用父类的方法播放音乐\n            setSongListInfo(playList, curId) {\n                this.$emit('setSongListInfo', playList, curId)\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .el-menu.el-menu--horizontal {\n        border-bottom: 0px;\n    }\n\n    .el-menu-item.is-active {\n        color: black;\n        border-bottom: 2px solid red !important;\n    }\n</style>\n"],"sourceRoot":"src/components/findMusic/singer"}]}