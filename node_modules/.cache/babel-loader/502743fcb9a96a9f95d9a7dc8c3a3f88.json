{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/search/SearchBySinger.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/search/SearchBySinger.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWFyY2hEYXRhOiBkZWNvZGVVUklDb21wb25lbnQodGhpcy4kcm91dGUucGFyYW1zLmRhdGEpLAogICAgICAvL+W9k+WJjeeahOaQnOe0ouadoeS7tgogICAgICBxdWVyeUluZm86IHsKICAgICAgICBrZXl3b3JkczogdGhpcy4kcm91dGUucGFyYW1zLmRhdGEsCiAgICAgICAgbGltaXQ6IDMwLAogICAgICAgIG9mZnNldDogMCwKICAgICAgICB0eXBlOiAxMDAKICAgICAgICAvKiB0eXBlCiAgICAgICAgICAgIOm7mOiupOS4ujEKICAgICAgICAgICAgMTog5Y2V5puyIDEwMDrmrYzmiYsgMTAwMDrmrYzljZUgMTAxNDrop4bpopEKICAgICAgICAqLwoKICAgICAgfSwKICAgICAgLy/mn6Xor6Lnu5PmnpzmgLvmlbAKICAgICAgc2luZ2VyVG90YWw6IDAsCiAgICAgIC8v5q2M5puy5pWw55qE57uT5p6c6ZuGCiAgICAgIHNpbmdlckxpc3Q6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0U2luZ2VyUmVzdWx0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+afpeivouaQnOe0oueahOatjOaJi+e7k+aenOmbhgogICAgZ2V0U2luZ2VyUmVzdWx0OiBmdW5jdGlvbiBnZXRTaW5nZXJSZXN1bHQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldCgnL3NlYXJjaCcsIHsKICAgICAgICBwYXJhbXM6IHRoaXMucXVlcnlJbmZvCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnNpbmdlckxpc3QgPSByZXMuZGF0YS5yZXN1bHQuYXJ0aXN0czsKICAgICAgICBfdGhpcy5zaW5nZXJUb3RhbCA9IHJlcy5kYXRhLnJlc3VsdC5hcnRpc3RDb3VudDsKICAgICAgfSk7CiAgICB9LAogICAgLy/ot7PovazmrYzmiYvpobUKICAgIHRvU2luZ2VyUGFnZTogZnVuY3Rpb24gdG9TaW5nZXJQYWdlKGlkKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvc2luZ2VyLycgKyBpZCk7CiAgICB9LAogICAgLy/liIbpobXmj5Lku7bpobXmlbDmlLnlj5gKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUN1cnJlbnRDaGFuZ2UobmV3UGFnZSkgewogICAgICB0aGlzLnF1ZXJ5SW5mby5vZmZzZXQgPSAobmV3UGFnZSAtIDEpICogdGhpcy5xdWVyeUluZm8ubGltaXQ7CiAgICAgIGlmICh0aGlzLnF1ZXJ5SW5mby5vZmZzZXQgPj0gdGhpcy5zb25nVG90YWwpIHRoaXMucXVlcnlJbmZvLm9mZnNldCA9IHRoaXMuc29uZ1RvdGFsOwogICAgICB0aGlzLmdldFNpbmdlclJlc3VsdCgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["SearchBySinger.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,kBAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CADA;AAEA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,CAHA;AAIA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;;AARA,OAHA;AAaA;AACA,MAAA,WAAA,EAAA,CAdA;AAeA;AACA,MAAA,UAAA,EAAA;AAhBA,KAAA;AAkBA,GApBA;AAqBA,EAAA,OArBA,qBAqBA;AACA,SAAA,eAAA;AACA,GAvBA;AAwBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,eAFA,6BAEA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,SAAA,EAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,WAAA;AACA,OAHA;AAIA,KAPA;AAQA;AACA,IAAA,YATA,wBASA,EATA,EASA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,aAAA,EAAA;AACA,KAXA;AAYA;AACA,IAAA,mBAbA,+BAaA,OAbA,EAaA;AACA,WAAA,SAAA,CAAA,MAAA,GAAA,CAAA,OAAA,GAAA,CAAA,IAAA,KAAA,SAAA,CAAA,KAAA;AACA,UAAA,KAAA,SAAA,CAAA,MAAA,IAAA,KAAA,SAAA,EAAA,KAAA,SAAA,CAAA,MAAA,GAAA,KAAA,SAAA;AACA,WAAA,eAAA;AACA;AAjBA;AAxBA,CAAA","sourcesContent":["<template>\n    <div style=\"margin-bottom: 75px;\">\n        <el-row v-for=\"(item,index) in singerList\" style=\"margin-top: 25px;\">\n            <el-col :span=\"12\" :offset=\"6\" @click.native=\"toSingerPage(item.id)\"\n                    :style=\"index % 2 === 0 ? 'background: rgb(245,245,247)' : ''\">\n                <el-image :src=\"item.picUrl\" style=\"width: 100px;height: 100px;\"></el-image>\n                <span style=\"position: absolute;top: 40%\">{{item.name}}</span>\n            </el-col>\n        </el-row>\n        <!--分页-->\n        <el-pagination style=\"display: block;width: 20%;margin: 15px auto\"\n                layout=\"prev, pager, next\" :page-size=\"queryInfo.limit\"\n                :total=\"singerTotal\" @current-change=\"handleCurrentChange\">\n        </el-pagination>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                searchData: decodeURIComponent(this.$route.params.data),\n                //当前的搜索条件\n                queryInfo: {\n                    keywords: this.$route.params.data,\n                    limit: 30,\n                    offset: 0,\n                    type: 100\n                    /* type\n                        默认为1\n                        1: 单曲 100:歌手 1000:歌单 1014:视频\n                    */\n                },\n                //查询结果总数\n                singerTotal: 0,\n                //歌曲数的结果集\n                singerList: [],\n            }\n        },\n        created() {\n            this.getSingerResult()\n        },\n        methods: {\n            //查询搜索的歌手结果集\n            getSingerResult() {\n                this.$http.get('/search', {params: this.queryInfo}).then(res => {\n                    this.singerList = res.data.result.artists\n                    this.singerTotal = res.data.result.artistCount\n                })\n            },\n            //跳转歌手页\n            toSingerPage(id) {\n                this.$router.push('/singer/' + id)\n            },\n            //分页插件页数改变\n            handleCurrentChange(newPage) {\n                this.queryInfo.offset = (newPage - 1) * this.queryInfo.limit\n                if (this.queryInfo.offset >= this.songTotal) this.queryInfo.offset = this.songTotal\n                this.getSingerResult();\n            },\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .el-col:hover {\n        background-color: rgb(235, 236, 237) !important;\n        cursor: pointer;\n    }\n</style>\n"],"sourceRoot":"src/components/findMusic/search"}]}