{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/cloud/CloudMusic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/cloud/CloudMusic.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5wYWQtc3RhcnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8v5b2T5YmN6Z+z5LmQ55qE5a+56LGhCiAgICAgIGN1cnJlbnRNdXNpY0xpc3RJbmZvOiBbXSwKICAgICAgLy/niLbnu4Tku7blvZPliY3mkq3mlL7nmoTpn7PkuZDnmoRpZAogICAgICBjdXJJZDogcGFyc2VJbnQod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJQbGF5TXVzaWNJZCcpKSwKICAgICAgLy/mrYzljZXnmoTmrYzmm7JpZOWQiOmbhgogICAgICBzb25nTGlzdEluZm86IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy/ojrflj5bpn7PkuZDkupHnm5jnmoTmlbDmja4KICAgIHRoaXMuZ2V0Q2xvdWREYXRhKCk7IC8v5rOo5YaM55uR5ZCs55qE5LqL5Lu2IOWcqG1haW4uanPkuK3lrprkuYnkuoYKCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2V0SXRlbScsIGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMuY3VySWQgPSBwYXJzZUludChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VyUGxheU11c2ljSWQnKSk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldENsb3VkRGF0YTogZnVuY3Rpb24gZ2V0Q2xvdWREYXRhKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJGh0dHAuZ2V0KCcvdXNlci9jbG91ZCcsIHsKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGxpbWl0OiAxMDAwCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIuY3VycmVudE11c2ljTGlzdEluZm8gPSByZXMuZGF0YS5kYXRhOyAvL+WkhOeQhuaXtumXtAoKICAgICAgICBfdGhpczIuY3VycmVudE11c2ljTGlzdEluZm8uZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgdmFyIGR0ID0gbmV3IERhdGUoaXRlbS5hZGRUaW1lKTsKICAgICAgICAgIHZhciB5ID0gZHQuZ2V0RnVsbFllYXIoKTsKICAgICAgICAgIHZhciBtID0gKGR0LmdldE1vbnRoKCkgKyAxICsgJycpLnBhZFN0YXJ0KDIsICcwJyk7CiAgICAgICAgICB2YXIgZCA9IChkdC5nZXREYXkoKSArICcnKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICAgICAgaXRlbS5hZGRUaW1lID0gIiIuY29uY2F0KHksICItIikuY29uY2F0KG0sICItIikuY29uY2F0KGQpOwogICAgICAgIH0pOyAvL+iuvue9ruatjOWNleaJgOacieatjOabsueahGlk5L+h5oGvCgoKICAgICAgICBfdGhpczIuc2V0U29uZ0xpc3RJbmZvKCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8v5Y+M5Ye75q2M5puy5re75Yqg5pWw5o2u6L+b5Y67LOW5tuW+queOr+aSreaUvijlkJHniLbnu4Tku7bkvKDpgJLlj4LmlbApCiAgICBwbGF5TXVzaWNMaXN0OiBmdW5jdGlvbiBwbGF5TXVzaWNMaXN0KHJvdykgewogICAgICB0aGlzLiRlbWl0KCdzZXRTb25nTGlzdEluZm8nLCB0aGlzLnNvbmdMaXN0SW5mbywgcm93LnNpbXBsZVNvbmcuaWQpOwogICAgfSwKICAgIC8v6K6+572u5q2M5Y2V5omA5pyJ5q2M5puy55qEaWQKICAgIHNldFNvbmdMaXN0SW5mbzogZnVuY3Rpb24gc2V0U29uZ0xpc3RJbmZvKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuY3VycmVudE11c2ljTGlzdEluZm8uZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIF90aGlzMy5zb25nTGlzdEluZm8ucHVzaChpdGVtLnNpbXBsZVNvbmcuaWQpOwogICAgICB9KTsKICAgIH0sCiAgICAvL+eCueWHu+atjOaJi+WQjei3s+i9rOatjOaJi+ivpue7humhtemdogogICAgdG9TaW5nZXJQYWdlOiBmdW5jdGlvbiB0b1NpbmdlclBhZ2Uocm93LCBjb2x1bW4sIGNlbGwpIHsKICAgICAgaWYgKGNvbHVtbi5sYWJlbCA9PT0gIuatjOaJiyIpIHsKICAgICAgICAvL+eCueWHu+eahOaYr+atjOaJi+mCo+S4gOWIlyDov5vlhaXmrYzmiYvor6bmg4XpobUKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL3Npbmdlci8nICsgcm93LnNpbXBsZVNvbmcuYXJbMF0uaWQpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["CloudMusic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,oBAAA,EAAA,EAFA;AAGA;AACA,MAAA,KAAA,EAAA,QAAA,CAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAJA;AAKA;AACA,MAAA,YAAA,EAAA;AANA,KAAA;AAQA,GAVA;AAWA,EAAA,OAXA,qBAWA;AAAA;;AACA;AACA,SAAA,YAAA,GAFA,CAGA;;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AACA,KAFA;AAGA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,aAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,KAAA,EAAA;AAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,oBAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CADA,CAEA;;AACA,QAAA,MAAA,CAAA,oBAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,EAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA;AAEA,cAAA,CAAA,GAAA,EAAA,CAAA,WAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,EAAA,CAAA,QAAA,KAAA,CAAA,GAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,EAAA,CAAA,MAAA,KAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AAGA,UAAA,IAAA,CAAA,OAAA,aAAA,CAAA,cAAA,CAAA,cAAA,CAAA;AACA,SATA,EAHA,CAaA;;;AACA,QAAA,MAAA,CAAA,eAAA;AACA,OAfA;AAgBA,KAlBA;AAmBA;AACA,IAAA,aApBA,yBAoBA,GApBA,EAoBA;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,KAAA,YAAA,EAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,KAtBA;AAuBA;AACA,IAAA,eAxBA,6BAwBA;AAAA;;AACA,WAAA,oBAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AACA,OAFA;AAGA,KA5BA;AA6BA;AACA,IAAA,YA9BA,wBA8BA,GA9BA,EA8BA,MA9BA,EA8BA,IA9BA,EA8BA;AACA,UAAA,MAAA,CAAA,KAAA,KAAA,IAAA,EAAA;AAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,aAAA,GAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA;AACA;AACA;AAlCA;AAnBA,CAAA","sourcesContent":["<template>\n    <!--歌曲列表-->\n    <el-table :data=\"currentMusicListInfo\" ref=\"playTable\" highlight-current-row border stripe\n              style=\"cursor: context-menu;\" @row-dblclick=\"playMusicList\" @cell-click=\"toSingerPage\">\n\n        <el-table-column label=\"#\" type=\"index\">\n            <template scope=\"scope\">\n                <img v-if=\"curId === scope.row.simpleSong.id\" src=\"imgs/isPlay.png\" alt=\"\">\n                <p v-else>{{scope.$index+1}}</p>\n            </template>\n        </el-table-column>\n\n\n        <el-table-column v-if=\"false\" label=\"id\" prop=\"simpleSong.id\"></el-table-column>\n\n        <el-table-column label=\"音乐标题\" prop=\"songName\"></el-table-column>\n\n        <el-table-column label=\"歌手\" prop=\"simpleSong.ar[0].name\" width=\"80px;\"></el-table-column>\n\n        <el-table-column label=\"专辑名\" prop=\"album\"></el-table-column>\n\n        <el-table-column label=\"上传时间\" prop=\"addTime\" width=\"100px;\"></el-table-column>\n\n    </el-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                //当前音乐的对象\n                currentMusicListInfo: [],\n                //父组件当前播放的音乐的id\n                curId: parseInt(window.localStorage.getItem('curPlayMusicId')),\n                //歌单的歌曲id合集\n                songListInfo: [],\n            }\n        },\n        created() {\n            //获取音乐云盘的数据\n            this.getCloudData()\n            //注册监听的事件 在main.js中定义了\n            window.addEventListener('setItem', () => {\n                this.curId = parseInt(localStorage.getItem('curPlayMusicId'))\n            })\n        },\n        methods: {\n            getCloudData() {\n                this.$http.get('/user/cloud', {params: {limit: 1000}}).then(res => {\n                    this.currentMusicListInfo = res.data.data\n                    //处理时间\n                    this.currentMusicListInfo.forEach(item => {\n                        const dt = new Date(item.addTime)\n\n                        const y = dt.getFullYear()\n                        const m = (dt.getMonth()+ 1 +'').padStart(2,'0')\n                        const d = (dt.getDay() + '').padStart(2,'0')\n\n\n                        item.addTime = `${y}-${m}-${d}`\n                    })\n                    //设置歌单所有歌曲的id信息\n                    this.setSongListInfo()\n                })\n            },\n            //双击歌曲添加数据进去,并循环播放(向父组件传递参数)\n            playMusicList(row) {\n                this.$emit('setSongListInfo', this.songListInfo, row.simpleSong.id)\n            },\n            //设置歌单所有歌曲的id\n            setSongListInfo() {\n                this.currentMusicListInfo.forEach(item => {\n                    this.songListInfo.push(item.simpleSong.id)\n                })\n            },\n            //点击歌手名跳转歌手详细页面\n            toSingerPage(row, column, cell) {\n                if (column.label === \"歌手\"){//点击的是歌手那一列 进入歌手详情页\n                    this.$router.push('/singer/'+row.simpleSong.ar[0].id)\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components/findMusic/cloud"}]}