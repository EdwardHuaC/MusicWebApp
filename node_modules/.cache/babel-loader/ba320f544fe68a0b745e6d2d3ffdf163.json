{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/singer/SingerListPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/singer/SingerListPage.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL+atjOaJi+WIhuexu+afpeivouadoeS7tgogICAgICBxdWVyeUluZm86IHsKICAgICAgICB0eXBlOiAtMSwKICAgICAgICBhcmVhOiAtMSwKICAgICAgICBsaW1pdDogMTIsCiAgICAgICAgb2Zmc2V0OiAwCiAgICAgIH0sCiAgICAgIC8v5q2M5omL57G75Z6L5YiG57G75qCH562+CiAgICAgIHNpbmdlclR5cGU6IFt7CiAgICAgICAgaWQ6IC0xLAogICAgICAgIG5hbWU6ICflhajpg6gnCiAgICAgIH0sIHsKICAgICAgICBpZDogMSwKICAgICAgICBuYW1lOiAn55S35q2M5omLJwogICAgICB9LCB7CiAgICAgICAgaWQ6IDIsCiAgICAgICAgbmFtZTogJ+Wls+atjOaJiycKICAgICAgfSwgewogICAgICAgIGlkOiAzLAogICAgICAgIG5hbWU6ICfkuZDpmJ8nCiAgICAgIH1dLAogICAgICAvL+atjOaJi+ivreenjeWIhuexuwogICAgICBzaW5nZXJMYW5ndWFnZTogW3sKICAgICAgICBpZDogLTEsCiAgICAgICAgbmFtZTogJ+WFqOmDqCcKICAgICAgfSwgewogICAgICAgIGlkOiA3LAogICAgICAgIG5hbWU6ICfljY7or60nCiAgICAgIH0sIHsKICAgICAgICBpZDogOTYsCiAgICAgICAgbmFtZTogJ+asp+e+jicKICAgICAgfSwgewogICAgICAgIGlkOiA4LAogICAgICAgIG5hbWU6ICfml6XmnKwnCiAgICAgIH0sIHsKICAgICAgICBpZDogMTYsCiAgICAgICAgbmFtZTogJ+mfqeWbvScKICAgICAgfSwgewogICAgICAgIGlkOiAwLAogICAgICAgIG5hbWU6ICflhbbku5YnCiAgICAgIH1dLAogICAgICAvL+atjOaJi+aVsOaNrgogICAgICBzaW5nZXJMaXN0OiBbXSwKICAgICAgLy/kuIrkuIDmrKHngrnlh7vnmoTor63np43liIbnsbso6buY6K6k55qE5pivdHlwZS0xKQogICAgICBwcmV2Q2xpY2tBcmVhOiAnYXJlYS0xJywKICAgICAgLy/kuIrkuIDmrKHngrnlh7vnmoTor63np43liIbnsbso6buY6K6k55qE5pivdHlwZS0xKQogICAgICBwcmV2Q2xpY2tUeXBlOiAndHlwZS0xJwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAvL+iOt+WPluatjOaJi+aVsOaNrgogICAgdGhpcy5nZXRTaW5nZXJMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+iOt+WPluatjOaJi+aVsOaNrgogICAgZ2V0U2luZ2VyTGlzdDogZnVuY3Rpb24gZ2V0U2luZ2VyTGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJGh0dHAuZ2V0KCdhcnRpc3QvbGlzdCcsIHsKICAgICAgICBwYXJhbXM6IHRoaXMucXVlcnlJbmZvCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnNpbmdlckxpc3QgPSByZXMuZGF0YS5hcnRpc3RzOwogICAgICB9KTsKICAgIH0sCiAgICAvL+WIhumhteaPkuS7tumhteaVsOaUueWPmAogICAgaGFuZGxlQ3VycmVudENoYW5nZTogZnVuY3Rpb24gaGFuZGxlQ3VycmVudENoYW5nZShuZXdQYWdlKSB7CiAgICAgIHRoaXMucXVlcnlJbmZvLm9mZnNldCA9IChuZXdQYWdlIC0gMSkgKiB0aGlzLnF1ZXJ5SW5mby5saW1pdDsKICAgICAgdGhpcy5nZXRTaW5nZXJMaXN0KCk7CiAgICB9LAogICAgLy/mlLnlj5jor63np43liIbnsbsKICAgIGNoYW5nZU11c2ljTGlzdFR5cGVzOiBmdW5jdGlvbiBjaGFuZ2VNdXNpY0xpc3RUeXBlcyhhcmVhSWQpIHsKICAgICAgLy/mkqTplIDkuIrkuIDmrKHooqvpgInkuK3nmoTmoIfnrb7nmoTmoLflvI8KICAgICAgdGhpcy4kKCcuaXNBY3RpdmUnKS5lcSgwKS5hdHRyKCdjbGFzcycsIHRoaXMucHJldkNsaWNrQXJlYSk7IC8v6L+Z5qyh54K55Ye755qE5qCH562+6auY5LquCgogICAgICB0aGlzLiQoJy5hcmVhJyArIGFyZWFJZCkuZXEoMCkuYXR0cignY2xhc3MnLCAnaXNBY3RpdmUnKTsgLy/otYvlgLzlrZjlgqgKCiAgICAgIHRoaXMucHJldkNsaWNrQXJlYSA9ICdhcmVhJyArIGFyZWFJZDsgLy/kv67mlLnmn6Xor6LmnaHku7YKCiAgICAgIHRoaXMucXVlcnlJbmZvLmFyZWEgPSBhcmVhSWQ7CiAgICAgIHRoaXMuZ2V0U2luZ2VyTGlzdCgpOwogICAgfSwKICAgIC8v5pS55Y+Y5q2M5omL5oCn5Yir5YiG57G7CiAgICBjaGFuZ2VNdXNpY0xpc3RTZXg6IGZ1bmN0aW9uIGNoYW5nZU11c2ljTGlzdFNleCh0eXBlSWQpIHsKICAgICAgLy/mkqTplIDkuIrkuIDmrKHooqvpgInkuK3nmoTmoIfnrb7nmoTmoLflvI8KICAgICAgdGhpcy4kKCcuaXNBY3RpdmVCeVR5cGVzJykuZXEoMCkuYXR0cignY2xhc3MnLCB0aGlzLnByZXZDbGlja1R5cGUpOyAvL+i/measoeeCueWHu+eahOagh+etvumrmOS6rgoKICAgICAgdGhpcy4kKCcudHlwZScgKyB0eXBlSWQpLmVxKDApLmF0dHIoJ2NsYXNzJywgJ2lzQWN0aXZlQnlUeXBlcycpOyAvL+i1i+WAvOWtmOWCqAoKICAgICAgdGhpcy5wcmV2Q2xpY2tUeXBlID0gJ3R5cGUnICsgdHlwZUlkOyAvL+S/ruaUueafpeivouadoeS7tgoKICAgICAgdGhpcy5xdWVyeUluZm8udHlwZSA9IHR5cGVJZDsKICAgICAgdGhpcy5nZXRTaW5nZXJMaXN0KCk7CiAgICB9LAogICAgLy/ot7PovazmrYzmiYvor6bmg4XpobUKICAgIHRvU2luZ2VyRGV0YWlsUGFnZTogZnVuY3Rpb24gdG9TaW5nZXJEZXRhaWxQYWdlKGlkKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvc2luZ2VyLycgKyBpZCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SingerListPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <el-container style=\"margin-bottom: 55px;\">\n        <el-header style=\"height: 80px;\">\n            <p>\n                语种:\n                <span id=\"areas\" v-for=\"(item,index) in singerLanguage\" :class=\"index===0? 'isActive' : 'area'+item.id\"\n                      @click=\"changeMusicListTypes(item.id)\"\n                      style=\"margin-left: 25px;cursor: pointer;\">{{item.name}}</span>\n            </p>\n            <p>\n                分类:\n                <span id=\"types\" v-for=\"(item,index) in singerType\"\n                      :class=\"index===0? 'isActiveByTypes' : 'type'+item.id\"\n                      @click=\"changeMusicListSex(item.id)\"\n                      style=\"margin-left: 25px;cursor: pointer;\">{{item.name}}</span>\n\n                <!--                @click=\"changeMusicListCat(item.name,index)\"-->\n            </p>\n        </el-header>\n\n        <el-main>\n\n            <el-row :gutter=\"10\">\n\n                <el-col :span=\"4\" v-for=\"(item,index) in singerList\" style=\"margin-top: 20px;position:relative;\"\n                        :key=\"index\">\n\n                    <div>\n                        <el-image :src=\"item.img1v1Url\" @click=\"toSingerDetailPage(item.id)\"\n                                  style=\"box-shadow: 0 0 2px 2px gray;border-radius: 10px;cursor: pointer\">\n                        </el-image>\n                    </div>\n\n\n                    <h1 @click=\"toSingerDetailPage(item.id)\" style=\"cursor:pointer;\">{{item.name}}</h1>\n\n                </el-col>\n            </el-row>\n            <!--分页-->\n            <el-pagination background\n                           layout=\"prev,next\"  :page-size=\"queryInfo.limit\"\n                           @current-change=\"handleCurrentChange\">\n            </el-pagination>\n\n        </el-main>\n    </el-container>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                //歌手分类查询条件\n                queryInfo: {\n                    type: -1,\n                    area: -1,\n                    limit: 12,\n                    offset: 0,\n                },\n                //歌手类型分类标签\n                singerType: [\n                    {id: -1, name: '全部'},\n                    {id: 1, name: '男歌手'},\n                    {id: 2, name: '女歌手'},\n                    {id: 3, name: '乐队'}\n                ],\n                //歌手语种分类\n                singerLanguage: [\n                    {id: -1, name: '全部'},\n                    {id: 7, name: '华语'},\n                    {id: 96, name: '欧美'},\n                    {id: 8, name: '日本'},\n                    {id: 16, name: '韩国'},\n                    {id: 0, name: '其他'}\n                ],\n                //歌手数据\n                singerList: [],\n                //上一次点击的语种分类(默认的是type-1)\n                prevClickArea: 'area-1',\n                //上一次点击的语种分类(默认的是type-1)\n                prevClickType: 'type-1'\n            }\n        },\n        created() {\n            //获取歌手数据\n            this.getSingerList()\n        },\n        methods: {\n            //获取歌手数据\n            getSingerList() {\n                this.$http.get('artist/list', {params: this.queryInfo}).then(res => {\n                    this.singerList = res.data.artists\n                })\n            },\n            //分页插件页数改变\n            handleCurrentChange(newPage) {\n                this.queryInfo.offset = (newPage - 1) * this.queryInfo.limit\n                this.getSingerList();\n            },\n            //改变语种分类\n            changeMusicListTypes(areaId) {\n                //撤销上一次被选中的标签的样式\n                this.$('.isActive').eq(0).attr('class', this.prevClickArea)\n                //这次点击的标签高亮\n                this.$('.area' + areaId).eq(0).attr('class', 'isActive')\n                //赋值存储\n                this.prevClickArea = 'area'+areaId\n                //修改查询条件\n                this.queryInfo.area = areaId\n                this.getSingerList()\n            },\n            //改变歌手性别分类\n            changeMusicListSex(typeId) {\n                //撤销上一次被选中的标签的样式\n                this.$('.isActiveByTypes').eq(0).attr('class', this.prevClickType)\n                //这次点击的标签高亮\n                this.$('.type' + typeId).eq(0).attr('class', 'isActiveByTypes')\n                //赋值存储\n                this.prevClickType = 'type'+typeId\n                //修改查询条件\n                this.queryInfo.type = typeId\n                this.getSingerList()\n            },\n            //跳转歌手详情页\n            toSingerDetailPage(id) {\n                this.$router.push('/singer/'+id);\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    #types:hover, #areas:hover {\n        color: red;\n    }\n\n    .isActive, .isActiveByTypes {\n        color: red;\n    }\n</style>\n"],"sourceRoot":"src/components/findMusic/singer"}]}