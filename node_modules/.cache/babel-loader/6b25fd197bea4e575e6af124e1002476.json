{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/diyRecommend/MusicListTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/diyRecommend/MusicListTable.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5wYWQtc3RhcnQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8v5o6l5Y+X5Lyg6YCS5p2l55qE5Y+C5pWwCiAgICAgIHF1ZXJ5SWRzOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWRzID8gdGhpcy4kcm91dGUucGFyYW1zLmlkcyA6IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncXVlcnlJZHMnKSwKICAgICAgLy/mn6Xor6LlvZPliY3mrYzljZXmiYDmnInpn7PkuZDnmoRuYW1lIHVybCDkvZzogIXnrYnnrYkKICAgICAgY3VycmVudE11c2ljTGlzdEluZm86IFtdLAogICAgICAvL+atjOWNleeahOatjOabsmlk5ZCI6ZuGCiAgICAgIHNvbmdMaXN0SW5mbzogW10sCiAgICAgIC8v54i257uE5Lu25b2T5YmN5pKt5pS+55qE6Z+z5LmQ55qEaWQKICAgICAgY3VySWQ6IHBhcnNlSW50KHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VyUGxheU11c2ljSWQnKSkKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAvL+iOt+WPluWIl+ihqOS/oeaBr+aVsOaNrgogICAgdGhpcy5oYW5kbGVyU29uZ0xpc3QoKTsgLy/ms6jlhoznm5HlkKznmoTkuovku7Yg5ZyobWFpbi5qc+S4reWumuS5ieS6hgoKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzZXRJdGVtJywgZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5jdXJJZCA9IHBhcnNlSW50KGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJQbGF5TXVzaWNJZCcpKTsKICAgIH0pOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8v5pS+5YWl5LiK5LiA5Liq57uE5Lu25Lyg6YCS5p2l55qE5Y+C5pWwCiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3F1ZXJ5SWRzJywgdGhpcy5xdWVyeUlkcyk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+WkhOeQhuatjOWNleaJgOacieatjOabsuS/oeaBr+eahOafpeivoijmoLnmja5pZCkKICAgIGhhbmRsZXJTb25nTGlzdDogZnVuY3Rpb24gaGFuZGxlclNvbmdMaXN0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJGh0dHAuZ2V0KCdzb25nL2RldGFpbCcsIHsKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGlkczogdGhpcy5xdWVyeUlkcwogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMyLmN1cnJlbnRNdXNpY0xpc3RJbmZvID0gcmVzLmRhdGEuc29uZ3M7IC8v5aSE55CG5pe26ZW/5pWw5o2uCgogICAgICAgIF90aGlzMi5jdXJyZW50TXVzaWNMaXN0SW5mby5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICB2YXIgZHQgPSBuZXcgRGF0ZShpdGVtLmR0KTsKICAgICAgICAgIHZhciBtbSA9IChkdC5nZXRNaW51dGVzKCkgKyAnJykucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgICAgIHZhciBzcyA9IChkdC5nZXRTZWNvbmRzKCkgKyAnJykucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgICAgIGl0ZW0uZHQgPSBtbSArICc6JyArIHNzOwogICAgICAgIH0pOyAvL+iuvue9ruatjOWNleaJgOacieatjOabsueahGlk5L+h5oGvCgoKICAgICAgICBfdGhpczIuc2V0U29uZ0xpc3RJbmZvKCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8v5Y+M5Ye75q2M5puy5re75Yqg5pWw5o2u6L+b5Y67LOW5tuW+queOr+aSreaUvijlkJHniLbnu4Tku7bkvKDpgJLlj4LmlbApCiAgICBwbGF5TXVzaWNMaXN0OiBmdW5jdGlvbiBwbGF5TXVzaWNMaXN0KHJvdykgewogICAgICB0aGlzLiRlbWl0KCdzZXRTb25nTGlzdEluZm8nLCB0aGlzLnNvbmdMaXN0SW5mbywgcm93LmlkKTsKICAgIH0sCiAgICAvL+iuvue9ruatjOWNleaJgOacieatjOabsueahGlkCiAgICBzZXRTb25nTGlzdEluZm86IGZ1bmN0aW9uIHNldFNvbmdMaXN0SW5mbygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLmN1cnJlbnRNdXNpY0xpc3RJbmZvLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBfdGhpczMuc29uZ0xpc3RJbmZvLnB1c2goaXRlbS5pZCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8v54K55Ye75q2M5omL5ZCN6Lez6L2s5q2M5omL6K+m57uG6aG16Z2iCiAgICB0b1NpbmdlclBhZ2U6IGZ1bmN0aW9uIHRvU2luZ2VyUGFnZShpZCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL3Npbmdlci8nICsgaWQpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["MusicListTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,QAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,GAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,GAAA,GAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAFA;AAGA;AACA,MAAA,oBAAA,EAAA,EAJA;AAKA;AACA,MAAA,YAAA,EAAA,EANA;AAOA;AACA,MAAA,KAAA,EAAA,QAAA,CAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,CAAA;AARA,KAAA;AAUA,GAZA;AAaA,EAAA,OAbA,qBAaA;AAAA;;AACA;AACA,SAAA,eAAA,GAFA,CAGA;;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AACA,KAFA;AAGA,GApBA;AAqBA,EAAA,OArBA,qBAqBA;AACA;AACA,IAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,EAAA,KAAA,QAAA;AACA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,eAFA,6BAEA;AAAA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,aAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,GAAA,EAAA,KAAA;AAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,oBAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CADA,CAEA;;AACA,QAAA,MAAA,CAAA,oBAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,EAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,cAAA,EAAA,GAAA,CAAA,EAAA,CAAA,UAAA,KAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,cAAA,EAAA,GAAA,CAAA,EAAA,CAAA,UAAA,KAAA,EAAA,EAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AAEA,UAAA,IAAA,CAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA;AACA,SANA,EAHA,CAUA;;;AACA,QAAA,MAAA,CAAA,eAAA;AACA,OAZA;AAaA,KAhBA;AAiBA;AACA,IAAA,aAlBA,yBAkBA,GAlBA,EAkBA;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,KAAA,YAAA,EAAA,GAAA,CAAA,EAAA;AACA,KApBA;AAqBA;AACA,IAAA,eAtBA,6BAsBA;AAAA;;AACA,WAAA,oBAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AACA,OAFA;AAGA,KA1BA;AA2BA;AACA,IAAA,YA5BA,wBA4BA,EA5BA,EA4BA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,aAAA,EAAA;AACA;AA9BA;AAzBA,CAAA","sourcesContent":["<template>\n    <!--歌曲列表-->\n    <el-table :data=\"currentMusicListInfo\" ref=\"playTable\" highlight-current-row border stripe\n              style=\"cursor: context-menu;\" @row-dblclick=\"playMusicList\">\n\n        <el-table-column label=\"#\" type=\"index\">\n            <template scope=\"scope\">\n                <img v-if=\"curId === scope.row.id\" src=\"imgs/isPlay.png\" alt=\"\">\n                <p v-else>{{scope.$index+1}}</p>\n            </template>\n        </el-table-column>\n\n\n        <el-table-column v-if=\"false\" label=\"id\" prop=\"id\"></el-table-column>\n\n        <el-table-column label=\"音乐标题\" prop=\"name\"></el-table-column>\n\n        <el-table-column label=\"歌手\" prop=\"ar[0].name\" width=\"80px;\">\n            <template scope=\"scope\">\n                <span v-for=\"(item,index) in scope.row.ar\" style=\"cursor: pointer\" @click=\"toSingerPage(item.id)\">\n                    {{\n                    index === 0 && scope.row.ar.length > 1 && index !== scope.row.ar.length-1\n                    ? item.name +'/' : item.name\n                    }}\n                </span>\n            </template>\n        </el-table-column>\n\n        <el-table-column label=\"专辑名\" prop=\"al.name\"></el-table-column>\n\n        <el-table-column label=\"时长\" prop=\"dt\" width=\"80px;\"></el-table-column>\n\n    </el-table>\n</template>\n\n<script>\n\n    export default {\n        data() {\n            return {\n                //接受传递来的参数\n                queryIds: this.$route.params.ids ? this.$route.params.ids : window.localStorage.getItem('queryIds'),\n                //查询当前歌单所有音乐的name url 作者等等\n                currentMusicListInfo: [],\n                //歌单的歌曲id合集\n                songListInfo: [],\n                //父组件当前播放的音乐的id\n                curId: parseInt(window.localStorage.getItem('curPlayMusicId')),\n            }\n        },\n        created() {\n            //获取列表信息数据\n            this.handlerSongList()\n            //注册监听的事件 在main.js中定义了\n            window.addEventListener('setItem', () => {\n                this.curId = parseInt(localStorage.getItem('curPlayMusicId'))\n            })\n        },\n        mounted() {\n            //放入上一个组件传递来的参数\n            window.localStorage.setItem('queryIds', this.queryIds)\n        },\n        methods: {\n            //处理歌单所有歌曲信息的查询(根据id)\n            handlerSongList() {\n                this.$http.get('song/detail', {params: {ids: this.queryIds}}).then(res => {\n                    this.currentMusicListInfo = res.data.songs\n                    //处理时长数据\n                    this.currentMusicListInfo.forEach(item => {\n                        const dt = new Date(item.dt)\n                        const mm = (dt.getMinutes() + '').padStart(2, '0')\n                        const ss = (dt.getSeconds() + '').padStart(2, '0')\n\n                        item.dt = mm + ':' + ss\n                    })\n                    //设置歌单所有歌曲的id信息\n                    this.setSongListInfo()\n                })\n            },\n            //双击歌曲添加数据进去,并循环播放(向父组件传递参数)\n            playMusicList(row) {\n                this.$emit('setSongListInfo', this.songListInfo, row.id)\n            },\n            //设置歌单所有歌曲的id\n            setSongListInfo() {\n                this.currentMusicListInfo.forEach(item => {\n                    this.songListInfo.push(item.id)\n                })\n            },\n            //点击歌手名跳转歌手详细页面\n            toSingerPage(id) {\n                this.$router.push('/singer/' + id)\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n\n    /deep/ .el-table_1_column_4 .cell {\n        cursor: pointer !important;\n    }\n</style>\n"],"sourceRoot":"src/components/findMusic/diyRecommend"}]}