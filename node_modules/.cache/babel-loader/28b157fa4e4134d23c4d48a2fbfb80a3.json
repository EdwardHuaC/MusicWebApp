{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/PlayMusicPage/PlayMusicDetailPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/PlayMusicPage/PlayMusicDetailPage.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PlayMusicDetailPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <!--头部的图片跟歌词-->\n        <el-row class=\"topInfo\" style=\"position: relative;height: 800px;\">\n            <el-col :span=\"6\">\n                <img :src=\"music.al.picUrl\"\n                     style=\"opacity: 0.3;border-radius: 25px;position: absolute;left: 5%;width:90%;height: 800px;z-index: -1\"\n                     alt=\"\">\n                <!--播放的歌曲的图片信息-->\n                <img :src=\"music.al.picUrl\" alt=\"\" class=\"musicPoster\">\n            </el-col>\n\n            <el-col :span=\"12\" style=\"position: absolute;left: 50%;top: 10%\">\n                <h1 style=\"font-size: 25px;font-weight: 400\">{{music.name}}</h1>\n                <span>专辑: {{music.al.name}}</span>\n                <span style=\"margin-left: 15px;\">\n                    歌手:\n                    <span style=\"color: #4d99de;cursor: pointer\" @click=\"toSingerPage(music.ar[0].id)\">{{music.ar[0].name}}</span>\n                </span>\n                <!--歌词-->\n                <div style=\"width: 350px;height: 350px;overflow: hidden;margin-top: 25px;\">\n                    <div style=\"overflow-y: auto\">\n                        <ul ref=\"lyric\">\n                            <li v-for=\"(item, i) in lrcObject\"\n                                :style=\"{color: lyricIndex === i ? 'red' : 'black'}\">\n                                {{item.c}}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n            </el-col>\n        </el-row>\n\n        <!--底部评论信息-->\n        <el-main style=\"margin-top: 25px;margin-bottom: 75px;\">\n            <el-row>\n                <el-col :offset=\"4\" :span=\"15\">\n                    <h4 style=\"font-weight: 300\" v-if=\"queryInfo.offset === 0\">精彩评论</h4>\n                    <!--精彩评论的信息-->\n                    <div v-for=\"item in hotCommentList\"\n                         style=\"position: relative;border-top: 2px solid rgb(240,240,242);\n                 border-bottom: 1px solid rgb(240,240,242);padding: 15px 0;font-size: 15px;\">\n\n                        <div>\n                            <!--用户头像-->\n                            <img :src=\"item.user.avatarUrl\" alt=\"\"\n                                 style=\"display: inline;width: 50px;height: 50px;border-radius: 25px;\">\n\n                            <!--评论信息-->\n                            <div style=\"margin-left: 60px;margin-top: -60px;\">\n                                <p><span style=\"color: #4d99de;\">{{item.user.nickname}}</span>: {{item.content}}</p>\n\n                                <br v-if=\"item.beReplied.length > 0\">\n                                <!--子评论-->\n                                <div v-if=\"item.beReplied.length > 0\"\n                                     style=\"background-color: rgb(241,241,244);padding: 5px 5px;\">\n                                    <p v-for=\"citem in item.beReplied\"><span\n                                            style=\"color: #4d99de;\">{{citem.user.nickname}}</span>: {{citem.content}}\n                                    </p>\n                                </div>\n\n                                <p style=\"display:block;font-size: 13px;color: gray;opacity: 0.7\">{{item.time |\n                                    dateFormat}}</p>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <h4 style=\"font-weight: 300;margin-top: 25px;\">最新评论({{total}})</h4>\n                    <!--所有评论的信息-->\n                    <div v-for=\"item in commentList\"\n                         style=\"position: relative;border-top: 2px solid rgb(240,240,242);\n                 border-bottom: 1px solid rgb(240,240,242);padding: 15px 0;font-size: 15px;\">\n\n                        <div>\n                            <!--用户头像-->\n                            <img :src=\"item.user.avatarUrl\" alt=\"\"\n                                 style=\"display: inline;width: 50px;height: 50px;border-radius: 25px;\">\n\n                            <!--评论信息-->\n                            <div style=\"margin-left: 60px;margin-top: -60px;\">\n                                <p><span style=\"color: #4d99de;\">{{item.user.nickname}}</span>: {{item.content}}</p>\n\n                                <br v-if=\"item.beReplied.length > 0\">\n                                <!--子评论-->\n                                <div v-if=\"item.beReplied.length > 0\"\n                                     style=\"background-color: rgb(241,241,244);padding: 5px 5px;\">\n                                    <p v-for=\"citem in item.beReplied\"><span\n                                            style=\"color: #4d99de;\">@{{citem.user.nickname}}</span>: {{citem.content}}\n                                    </p>\n                                </div>\n\n                                <p style=\"display:block;font-size: 13px;color: gray;opacity: 0.7\">{{item.time |\n                                    dateFormat}}</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!--分页-->\n                    <el-pagination\n                            layout=\"prev, pager, next\" :page-size=\"queryInfo.limit\"\n                            :total=\"total\" @current-change=\"handleCurrentChange\">\n                    </el-pagination>\n                </el-col>\n            </el-row>\n        </el-main>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                curId: this.$route.params.id,\n                //当前音乐的详细信息\n                music: {\n                    name,\n                    al: {\n                        picUrl: ''\n                    },\n                    ar: [\n                        {\n                            name: ''\n                        }\n                    ]\n                },\n                //当前歌词字符串\n                lrc: '',\n                //解析歌词为对象\n                lrcObject: [],\n                //当前音乐播放的进度条(从父组件中实时同步获取)\n                duration: '',\n                //当前歌词的所位于歌词对象中的索引值(用于帮助高亮)\n                lyricIndex: 0,\n                //旋转对象\n                rotate: null,\n                //旋转角度\n                deg: 0,\n                //是否在播放\n                play: this.isPlay,\n                //查询评论的信息\n                queryInfo: {\n                    id: this.$route.params.id,\n                    limit: 10,\n                    offset: 0,\n                },\n                //所有评论列表\n                commentList: [],\n                //最热评论列表\n                hotCommentList: [],\n                //评论总数\n                total: 0,\n            }\n        },\n        props: ['musicDuration', 'curId', 'isPlay'],\n        watch: {\n            //父组件通过 router-view 的@musicDuration传递过来值(进行歌曲滚动操作)\n            musicDuration(newVal) {\n                this.duration = newVal\n                //对每次进来的进度条进行判断\n                // 跟下一句台词时长是否匹配,如果匹配则当前高亮的索引值+1\n                //使用循环帮助****回退  快进****的判断\n                for (let i = 0; i < this.lrcObject.length; i++) {\n                    //这里使用小于符号判断是为了 保证回退音乐进度事件的效果实现性\n                    if (newVal <= parseFloat(this.lrcObject[i].t)) {\n                        if (this.lyricIndex === i - 1) {\n                            break\n                        }\n                        //找到比当前时间点 大一点的后一位的歌词的索引值\n                        this.lyricIndex = i - 1;\n                        //当前距离上方的距离  控制歌词上下滚动\n                        var currentTemp = this.$refs.lyric.style.marginTop\n                        currentTemp = currentTemp.substr(0, currentTemp.length - 2)\n                        //滚动距离\n                        currentTemp = parseInt(currentTemp)\n                        if (i > 5) {//第五句歌词之后 开始使用定位\n                            /**\n                             * 例子\n                             * 第一句 margin-top 25px\n                             * 第二句 margin-top 50px\n                             * 第三句 margin-top 75px;\n                             * 以此类推\n                             *  ***计算出给一句歌词一个距离顶部的一个距离\n                             *  (每次只需要切换到当前距离顶部的位置 实现歌词滚动)\n                             *  顶部的位置 = 当前高亮歌词索引 * 25 +'px'   ***\n                             * @type {number}\n                             */\n                            currentTemp = (i - 5) * -35\n                            //设置样式\n                            this.$refs.lyric.style.marginTop = currentTemp + 'px'\n                        }\n                        //如果当前是最后一句歌词 代表歌曲要放送结束了 将我们的lyricIndex(当前歌词索引值还原成0便于下一曲使用)\n                        if (this.lyricIndex === this.lrcObject.length - 1) {\n                            this.lyricIndex = 0;\n                        }\n                        break;\n                    }\n                }\n            },\n            //监测curId变化\n            curId(newVal) {\n                this.curId = newVal\n            },\n            //监测当前的播放状态\n            isPlay(newVal) {\n                if (!newVal) {//如果当前是在暂停状态\n                    window.clearInterval(this.rotate)\n                } else {\n                    this.rotate = window.setInterval(() => {\n                        this.$('.musicPoster').eq(0).css('transform', 'rotate(' + this.deg + 'deg)');\n                        this.deg += 1;\n                    }, 30)\n                }\n            }\n        },\n        created() {\n            //获取音乐的详细信息\n            this.getMusicDetail(this.$route.params.id)\n            //获取歌曲的歌词\n            this.getMusicLrc()\n            //注册监听的事件 在main.js中定义了\n            window.addEventListener('setItem', () => {\n                this.curId = parseInt(localStorage.getItem('curPlayMusicId'))\n                this.getMusicDetail(this.curId)\n                this.getMusicLrc()\n            })\n            //查询该歌曲的评论信息\n            this.getMusicComment()\n        },\n        mounted() {\n            //dom元素加载完毕后,设置ul默认的向上样式\n            this.$refs.lyric.style.marginTop = '-10px'\n            //如果当前是在播放的时候 开始旋转\n            if (this.play) {\n                this.rotate = window.setInterval(() => {\n                    this.$('.musicPoster').eq(0).css('transform', 'rotate(' + this.deg + 'deg)');\n                    this.deg += 1;\n                }, 30)\n            }\n        },\n        beforeRouteLeave(to, form, next) {\n            window.clearInterval(this.rotate)\n            this.rotate = null\n            next()\n        },\n        methods: {\n            //根据id获取音乐详情\n            getMusicDetail(musicId) {\n                this.$http.get('song/detail', {params: {ids: musicId}}).then(res => {\n                    this.music = res.data.songs[0]\n                })\n            },\n            //获取歌词\n            getMusicLrc() {\n                this.$http.get('lyric', {params: {id: this.curId}}).then(res => {\n                    //获取歌词\n                    this.lrc = res.data.lrc.lyric\n                    //解析歌词\n                    this.createLrcObj(this.lrc);\n                })\n            },\n            //解析歌词\n            createLrcObj(lrc) {\n                var oLRC = {\n                    ms: [] //歌词数组{t:时间,c:歌词}\n                };\n                if (lrc.length == 0) return;\n                var lrcs = lrc.split('\\n');//用回车拆分成数组\n                for (var i in lrcs) {//遍历歌词数组\n                    lrcs[i] = lrcs[i].replace(/(^\\s*)|(\\s*$)/g, \"\"); //去除前后空格\n                    var t = lrcs[i].substring(lrcs[i].indexOf(\"[\") + 1, lrcs[i].indexOf(\"]\"));//取[]间的内容\n                    var s = t.split(\":\");//分离:前后文字\n                    if (isNaN(parseInt(s[0]))) { //不是数值\n                        for (var i in oLRC) {\n                            if (i != \"ms\" && i == s[0].toLowerCase()) {\n                                oLRC[i] = s[1];\n                            }\n                        }\n                    } else { //是数值\n                        var arr = lrcs[i].match(/\\[(\\d+:.+?)\\]/g);//提取时间字段，可能有多个\n                        var start = 0;\n                        for (var k in arr) {\n                            start += arr[k].length; //计算歌词位置\n                        }\n                        var content = lrcs[i].substring(start);//获取歌词内容\n                        for (var k in arr) {\n                            var t = arr[k].substring(1, arr[k].length - 1);//取[]间的内容\n                            // var t = arr[k]\n                            var s = t.split(\":\");//分离:前后文字\n                            oLRC.ms.push({//对象{t:时间,c:歌词}加入ms数组\n                                // t: t,\n                                t: (parseFloat(s[0]) * 60 + parseFloat(s[1])).toFixed(3),\n                                c: content === '' ? '..............' : content\n                            });\n                        }\n                    }\n                }\n                oLRC.ms.sort(function (a, b) {//按时间顺序排序\n                    return a.t - b.t;\n                });\n                // for(var i in oLRC){ //查看解析结果\n                //     console.log(i,\":\",oLRC[i]);\n                // }\n                this.lrcObject = oLRC.ms\n            },\n            //点击歌手名跳转歌手详细页面\n            toSingerPage(id) {\n                this.$router.push('/singer/' + id)\n            },\n            //查询评论\n            getMusicComment() {\n                this.$http.get('comment/music', {params: this.queryInfo}).then(res => {\n                    if (res.data.code !== 200) return this.$message.error('获取评论数据失败!')\n                    this.commentList = res.data.comments\n                    this.hotCommentList = res.data.hotComments\n                    this.total = res.data.total\n                })\n            },\n            //分页插件页数改变\n            handleCurrentChange(newPage) {\n                this.queryInfo.offset = (newPage - 1) * this.queryInfo.limit\n                this.getMusicComment();\n            },\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .musicPoster {\n        position: absolute;\n        border: 45px solid black;\n        border-radius: 100%;\n        box-shadow: 0 0 5px 5px gray;\n        width: 200px;\n        height: 200px;\n        top: 150px;\n        left: 13%;\n        z-index: -1;\n    }\n\n    .topInfo {\n        height: 600px;\n    }\n\n    li {\n        list-style: none;\n        margin-top: 15px;\n    }\n\n\n</style>\n"],"sourceRoot":"src/components/findMusic/PlayMusicPage"}]}