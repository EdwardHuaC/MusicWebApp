{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/Main.vue?vue&type=style&index=0&id=54d3a52e&lang=less&scoped=true&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/Main.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_less-loader@6.2.0@less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtaGVhZGVyIHsKICAgIGJhY2tncm91bmQ6IHJnYigyMzYsIDY1LCA2NSk7CiAgICBoZWlnaHQ6IDUwcHg7CiAgICBkaXNwbGF5OiBmbGV4OwoKICAgIC5sb2dvIHsKICAgICAgICB3aWR0aDogMjVweDsKICAgICAgICBoZWlnaHQ6IDI1cHg7CiAgICAgICAgbWFyZ2luOiAxNXB4IDEwcHg7CiAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7CiAgICB9CgogICAgc3BhbiB7CiAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgIGZvbnQtZmFtaWx5OiAiSGVsdmV0aWNhIE5ldWUiLCBIZWx2ZXRpY2EsICJQaW5nRmFuZyBTQyIsICJIaXJhZ2lubyBTYW5zIEdCIiwgIk1pY3Jvc29mdCBZYUhlaSIsICLlvq7ova/pm4Xpu5EiLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAgICAgICBmb250LXdlaWdodDogNTAwOwogICAgICAgIG1hcmdpbi10b3A6IDE1cHg7CiAgICAgICAgY29sb3I6IHdoaXRlOwogICAgfQoKICAgIC5lbC1pbnB1dCB7CiAgICAgICAgd2lkdGg6IDI3NXB4OwogICAgfQoKICAgIC9kZWVwLyAuZWwtaW5wdXRfX2lubmVyIHsKICAgICAgICBvcGFjaXR5OiAwLjQ7CiAgICAgICAgbWFyZ2luLXRvcDogMTVweDsKICAgICAgICBtYXJnaW4tbGVmdDogNTBweDsKICAgICAgICB3aWR0aDogMjI1cHg7CiAgICAgICAgaGVpZ2h0OiAyNXB4OwogICAgICAgIGJvcmRlci1yYWRpdXM6IDEycHg7CiAgICB9CgogICAgLnNlYXJjaEJ0biB7CiAgICAgICAgb3BhY2l0eTogMDsKICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgZmxvYXQ6IHJpZ2h0OwogICAgICAgIHdpZHRoOiAxcHg7CiAgICAgICAgaGVpZ2h0OiAyNHB4OwogICAgICAgIGxlZnQ6IC0zcHg7CiAgICAgICAgbWFyZ2luLXRvcDogMTVweCAhaW1wb3J0YW50OwogICAgICAgIGJvcmRlci1yYWRpdXM6IDYwJTsKICAgIH0KfQoKLnJpZ2h0Q29udGFpbmVyIHsKICAgIG1hcmdpbi1sZWZ0OiBhdXRvOwoKICAgIHNwYW4gewogICAgICAgIGZvbnQtc2l6ZTogMTdweDsKICAgICAgICBjb2xvcjogd2hpdGU7CiAgICB9CgogICAgLnVzZXJJY29uIHsKICAgICAgICB3aWR0aDogMzBweDsKICAgICAgICBoZWlnaHQ6IDMwcHg7CiAgICAgICAgYm9yZGVyLXJhZGl1czogNjAlOwogICAgICAgIG1hcmdpbi10b3A6IDEzcHg7CiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogICAgfQp9CgovZGVlcC8gLmVsLW1lbnUtaXRlbS1ncm91cF9fdGl0bGUgewogICAgcGFkZGluZy1sZWZ0OiA1cHggIWltcG9ydGFudDsKICAgIG1hcmdpbi10b3A6IDdweDsKfQoKLmVsLW1lbnUtaXRlbSB7CiAgICBoZWlnaHQ6IDQ1cHg7CiAgICBsaW5lLWhlaWdodDogMy40NWVtOwp9CgouZWwtbWVudS1pdGVtLmlzLWFjdGl2ZSB7CiAgICBjb2xvcjogYmxhY2s7CiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkIHJlZCAhaW1wb3J0YW50Owp9CgouZWwtbWVudSB7CiAgICBoZWlnaHQ6IDkyJTsKfQoKLmVsLWNhcmQuaXMtYWx3YXlzLXNoYWRvdywgLmVsLWNhcmQuaXMtaG92ZXItc2hhZG93OmZvY3VzLCAuZWwtY2FyZC5pcy1ob3Zlci1zaGFkb3c6aG92ZXIgewogICAgYm94LXNoYWRvdzogMCAwIDAgMDsKCn0KCi9kZWVwLyAuZWwtY2FyZF9fYm9keSB7CiAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7Cn0KCi9kZWVwLyAuZWwtc2xpZGVyX19idXR0b24gewogICAgYm9yZGVyOiAycHggc29saWQgcmdiKDE5OCwgNDcsIDQ3KSAhaW1wb3J0YW50Owp9CgovZGVlcC8gLmVsLXNsaWRlcl9fYnV0dG9uIHsKICAgIHdpZHRoOiAxMHB4ICFpbXBvcnRhbnQ7CiAgICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDsKfQoKL2RlZXAvIC5lbC1zbGlkZXJfX2JhciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTk4LCA0NywgNDcpOwp9CgouZWwtc2xpZGVyIHsKICAgIHdpZHRoOiA4MCU7CiAgICBtYXJnaW46IDAgYXV0bzsKfQoKLmxhYmEgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiA2cHg7CiAgICBsZWZ0OiAxNSU7CiAgICBjdXJzb3I6IHBvaW50ZXIKfQoKLmVsLWZvb3RlciB7CiAgICBwYWRkaW5nOiAwOwp9CgovZGVlcC8gLmVsLWRpYWxvZy0tY2VudGVyIHsKICAgIHRleHQtYWxpZ246IGVuZDsKICAgIGZsb2F0OiByaWdodDsKfQoKL2RlZXAvIC5lbC1kaWFsb2dfX3RpdGxlIHsKICAgIGZsb2F0OiBsZWZ0Owp9Cg=="},{"version":3,"sources":["Main.vue"],"names":[],"mappingsoffile":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <el-container style=\"height: 100%\">\n\n        <!--头部区域-->\n        <el-header>\n            <img src=\"imgs/logo.png\" alt=\"\" class=\"logo\">\n            <span>魔音灌耳</span>\n\n            <!--头部搜索区域-->\n            <el-input placeholder=\"搜索单曲,歌手,视频,歌单\" v-model=\"searchData\" @keyup.enter.native=\"toSearchPage\" size=\"mini\" suffix-icon=\"el-icon-search\">\n                <el-button slot=\"suffix\" class=\"searchBtn\" size=\"mini\" @click=\"toSearchPage\"></el-button>\n            </el-input>\n\n            <!--右侧登录区域-->\n            <div class=\"rightContainer\" style=\"display: flex\">\n                <img v-if=\"currentUserInfo === null\" src=\"imgs/userIcon.png\" class=\"userIcon\">\n                <img v-else :src=\"currentUserInfo.avatarUrl\" class=\"userIcon\">\n\n                <span v-if=\"currentUserInfo === null\" style=\"cursor:pointer;\" @click=\"handleLogin\">\n                    未登录\n                </span>\n\n                <span v-else>\n                    {{currentUserInfo.nickname}}\n                </span>\n                <el-button type=\"danger\" @click=\"logout\" v-if=\"currentUserInfo !== null\" size=\"mini\"\n                           style=\"height: 50%;margin-top: 10px;margin-left: 5px;\">\n                    退出\n                </el-button>\n            </div>\n\n        </el-header>\n\n        <!--主体区域-->\n        <el-container>\n            <!--侧边栏-->\n            <el-aside width=\"210px\">\n\n                <el-menu default-active=\"/findMusic\" :router=\"true\">\n                    <el-menu-item-group>\n                        <template slot=\"title\">推荐</template>\n                        <el-menu-item index=\"/findMusic\">发现音乐</el-menu-item>\n                        <el-menu-item index=\"/video\">视频</el-menu-item>\n                    </el-menu-item-group>\n\n                    <el-menu-item-group>\n                        <template slot=\"title\">我的音乐</template>\n                        <el-menu-item index=\"/cloudMusic\">我的音乐云盘</el-menu-item>\n                    </el-menu-item-group>\n\n                    <el-menu-item-group>\n                        <template slot=\"title\">创建的歌单</template>\n                        <el-menu-item :index=\"'/songlist/'+item.id\" @click=\"changePlaylistId(item.id)\"\n                                      v-for=\"(item,index) in currentUserPlayList\" :key=\"index\"\n                                      v-if=\"!item.subscribed\">{{item.name}}\n                        </el-menu-item>\n                    </el-menu-item-group>\n\n                    <el-menu-item-group>\n                        <template slot=\"title\">收藏的歌单</template>\n                        <el-menu-item :index=\"'/songlist/'+item.id\" @click=\"changePlaylistId(item.id)\"\n                                      v-for=\"(item,index) in currentUserPlayList\" :key=\"index\"\n                                      v-if=\"item.subscribed\">{{item.name}}\n                        </el-menu-item>\n                    </el-menu-item-group>\n\n                </el-menu>\n\n            </el-aside>\n\n            <el-container>\n                <el-main>\n                    <!--\n                        setMusicUrl:设置当前需要播放的url连接,子路由(DiyRecommend.vue)的banner调用传递url\n                        setSongListInfo:设置当前歌单信息,子路由(MusicListTable.vue)的点击事件传递歌单信息\n                        musicDuration给子组件传递值  子组件prop接收\n                        curId给子组件传值\n                    -->\n                    <router-view ref=\"child\" @setMusicUrl=\"setMusicUrl\" :musicDuration=\"musicDuration\"\n                                 @refreshPrivatePlaylist=\"getUserPrivatePlayList\"\n                                 :isPlay=\"isPlay\" :curId=\"curId\" @setSongListInfo=\"setSongListInfo\"></router-view>\n                </el-main>\n            </el-container>\n        </el-container>\n\n        <el-footer style=\"position:fixed;bottom: 0;width:100%;z-index: 100\" height=\"50\">\n\n            <!--底部播放信息显示-->\n            <!--点击左下角角标 跳转歌曲详情界面-->\n            <div style=\"position: absolute;bottom: 41px;width: 214px;\">\n                <div style=\"display: inline-block\">\n                    <img :src=\"music.al.picUrl\" alt=\"\" @click=\"toMusicDetailPage\"\n                         style=\"width: 60px;height: 63px;cursor:pointer;\">\n                </div>\n                <div style=\"position: absolute;bottom: -5px;left: 70px;\">\n                    <p style=\"height: 4px;font-size: 10px;\">{{music.name}}</p>\n                    <br>\n                    <p style=\"color: gray;font-size: 10px;display: inline-block;cursor: pointer\" @click=\"$router.push('/singer/' + music.ar[0].id)\">{{music.ar[0].name}}</p>\n                </div>\n            </div>\n\n            <!--进度条及一些组件-->\n            <el-row style=\"border-top: 1px solid rgb(230,230,230);background-color: white\">\n                <!--一首 暂停 下一首控件-->\n                <el-col :span=\"2.5\">\n                    <img src=\"imgs/prev.png\" @click=\"changePrevMusic\" alt=\"\"\n                         style=\"border-radius: 100%;cursor: pointer;\">\n\n                    <img v-if=\"isPlay\" src=\"imgs/pauseMusic.png\" alt=\"\" @click=\"playMusic\"\n                         style=\"border-radius: 100%;cursor: pointer;margin-left: 25px;width: 40px;height: 40px;\">\n\n                    <img v-else src=\"imgs/playMusic.png\" alt=\"\" @click=\"playMusic\"\n                         style=\"border-radius: 100%;cursor: pointer;margin-left: 25px;width: 40px;height: 40px;\">\n\n                    <img src=\"imgs/next.png\" alt=\"\" @click=\"changeNextMusic\"\n                         style=\"border-radius: 100%;cursor: pointer;margin-left: 25px;\">\n                </el-col>\n\n\n                <el-col style=\"position: relative\" :span=\"12\" :offset=\"2\">\n\n                    <!--秒数通过 过滤器处理成看得懂的样式-->\n                    <span style=\"position:absolute;top: 11px;left: -10px;\">{{this.musicDuration | timeFormat}}</span>\n\n                    <!--音乐播放进度条-->\n                    <el-slider v-model=\"musicDuration\" :max=\"totalDuration\" @change=\"musicDurationChange\"\n                               :show-tooltip=\"false\"></el-slider>\n\n                    <span style=\"position:absolute;left: 94%;bottom: 25%\">{{totalDuration | timeFormat}}</span>\n                </el-col>\n\n                <el-col :span=\"5\" style=\"position: relative\" :offset=\"1\">\n                    <!--音量控制-->\n                    <img src=\"imgs/laba.png\" v-if=\"musicVolume!==0\" alt=\"\" @click=\"silence\" class=\"laba\">\n\n                    <img src=\"imgs/shutUp.png\" v-else alt=\"\" @click=\"silence\" class=\"laba\">\n\n                    <img src=\"imgs/songList.png\" alt=\"\" @click=\"showRightPlayList\"\n                         style=\"position: absolute;top: 10px;right: 9%;cursor:pointer;\">\n\n                    <el-slider v-model=\"musicVolume\" :show-tooltip=\"false\" style=\"width: 40%\"\n                               @change=\"musicVolumeChange\">\n                    </el-slider>\n\n                </el-col>\n            </el-row>\n\n            <audio :src=\"musicUrl\" autoplay class=\"playMusicAudio\"></audio>\n        </el-footer>\n\n        <!--歌单列表的右下角弹窗显示-->\n        <el-dialog :modal=\"false\" :show-close=\"false\"\n                   title=\"播放列表\"\n                   :visible.sync=\"showRightPlayListDialog\"\n                   width=\"30%\"\n                   center>\n            <el-table :data=\"currentMusicListInfo\" ref=\"playTable\" highlight-current-row border stripe\n                      style=\"cursor: context-menu;\" @row-dblclick=\"playRightMusicList\">\n\n                <el-table-column label=\"#\" type=\"index\">\n                    <template slot-scope=\"scope\">\n                        <img v-if=\"curId === scope.row.id\" src=\"imgs/isPlay.png\" alt=\"\">\n                        <p v-else>{{scope.$index+1}}</p>\n                    </template>\n                </el-table-column>\n\n                <el-table-column v-if=\"false\" label=\"id\" prop=\"id\"></el-table-column>\n\n                <el-table-column label=\"音乐标题\" prop=\"name\"></el-table-column>\n\n                <el-table-column label=\"歌手\" prop=\"ar[0].name\"></el-table-column>\n\n                <el-table-column label=\"专辑名\" prop=\"al.name\"></el-table-column>\n\n                <el-table-column label=\"时长\" prop=\"dt\" width=\"80px;\"></el-table-column>\n\n            </el-table>\n\n\n        </el-dialog>\n\n        <!--登录界面的弹出-->\n        <el-dialog title=\"使用网易云官方注册的账号登录即可\"\n                   :visible.sync=\"loginDialogVisible\"\n                   width=\"30%\" @close=\"handleLoginDialogClosed\">\n            <div>\n                <img src=\"imgs/phone.png\" style=\"display: block;margin: 0 auto\" alt=\"\">\n                <el-form :model=\"loginInfo\" :rules=\"loginInfoRules\" ref=\"loginInfoRuleForm\" style=\"margin-top: 25px;\">\n\n                    <el-form-item prop=\"phone\">\n                        <el-input style=\"display: block;margin:0 auto;width: 60%\" prefix-icon=\"el-icon-user\"\n                                  v-model=\"loginInfo.phone\" placeholder=\"请输入手机号\"></el-input>\n\n                    </el-form-item>\n\n                    <el-form-item prop=\"password\">\n                        <el-input style=\"display: block;margin:0 auto;width: 60%\" show-password\n                                  prefix-icon=\"el-icon-lock\" v-model=\"loginInfo.password\" type=\"password\"\n                                  placeholder=\"请输入密码\"></el-input>\n                    </el-form-item>\n                </el-form>\n                <el-button @click=\"loginMusic\" type=\"danger\"\n                           style=\"background-color: red;width: 60%;display: block;margin: 0 auto\">登录\n                </el-button>\n            </div>\n\n        </el-dialog>\n    </el-container>\n\n</template>\n\n<script>\n    import SearchPage from \"./findMusic/search/SearchPage\";\n\n    export default {\n        data() {\n            return {\n                //播放音乐的链接\n                musicUrl: '',\n                //当前音乐详情对象\n                music: {\n                    name,\n                    al: {\n                        picUrl: ''\n                    },\n                    ar: [\n                        {\n                            name: ''\n                        }\n                    ]\n                },\n                //当前音乐的进度条\n                musicDuration: 0,\n                //当前音乐的id\n                curId: 0,\n                //总进度条\n                totalDuration: 0,\n                //音乐的音量\n                musicVolume: 20,\n                //默认是否在播放\n                isPlay: false,\n                //播放列表\n                playListInfo: window.localStorage.getItem('playList') === null ? [] : window.localStorage.getItem('playList').split(','),\n                //当前播放的歌单的所有歌曲的url和其他信息\n                currentMusicListInfo: [],\n                //当前播放的歌单的id\n                songListInfo: [],\n                // 展示右边的歌单对话框\n                showRightPlayListDialog: false,\n                //展示登录的对话框\n                loginDialogVisible: false,\n                //登录的信息\n                loginInfo: {\n                    phone: '',\n                    password: ''\n                },\n                //登录的校验规则\n                loginInfoRules: {\n                    phone: [\n                        {required: true, message: ' ', trigger: 'blur'}\n                    ],\n                    password: [\n                        {required: true, message: ' ', trigger: 'blur'}\n                    ]\n                },\n                //当前用户的用户信息\n                currentUserInfo: window.localStorage.getItem('currentUserInfo') === 'null' ? null : JSON.parse(window.localStorage.getItem('currentUserInfo')),\n                //当前用户的歌单\n                currentUserPlayList: [],\n                //搜索条件\n                searchData: '前前前世'\n            }\n        },\n        watch: {\n            //监听组件中的当前音乐id的变化 放入localstorage中供给各个组件使用\n            curId(newVal) {\n                // window.localStorage.setItem('curPlayMusicId',newVal);\n                //使用定义好的方法设置新的localstorage中的值 main.js中定义\n                this.resetSetItem('curPlayMusicId', newVal);\n            }\n        },\n        created() {\n            //用户已登录\n            if (this.currentUserInfo !== null) {\n                this.getUserPrivatePlayList()\n            }\n        },\n        methods: {\n            //设置当前播放url\n            setMusicUrl(mUrl, detail) {\n                //设置关于音乐的链接和歌曲信息\n                this.musicUrl = mUrl;\n                this.music = detail;\n                this.curId = detail.id;\n                //将当前轮播图传来的歌曲id放入歌单中\n                this.playListInfo.push(detail.id);\n\n                this.setAudioTagsInfo()\n            },\n            //设置audio的各种信息\n            setAudioTagsInfo() {\n                let audio = this.$('.playMusicAudio')[0];\n                //监听audio的timeUpdate事件\n                audio.addEventListener(\"timeupdate\", () => {\n                    //获取歌曲的总长度 example: 257s\n                    this.totalDuration = audio.duration;\n                    //获取歌曲时间\n                    this.musicDuration = audio.currentTime;\n\n                    //当前歌曲播放完毕自动播放下一首\n                    if (audio.currentTime >= audio.duration) {\n                        this.changeNextMusic()\n                    }\n                });\n                //更新音乐播放状态\n                this.isPlay = true\n            },\n            //音乐进度条值变化的方法\n            musicDurationChange() {\n                if (this.totalDuration === 0) return;\n                let audio = this.$('.playMusicAudio')[0];\n                audio.currentTime = this.musicDuration\n            },\n            //音量变化\n            musicVolumeChange() {\n                this.volumeChange(this.musicVolume / 100)\n            },\n            //改变音量的函数\n            volumeChange(sum) {\n                let audio = this.$('.playMusicAudio')[0];\n                audio.volume = sum\n            },\n            //静音和改变图标\n            silence() {\n                if (this.musicVolume !== 0) {\n                    this.volumeChange(0);\n                    this.musicVolume = 0;\n                } else {\n                    this.volumeChange(0.2);\n                    this.musicVolume = 20;\n                }\n            },\n            //控制暂停播放\n            playMusic() {\n                var audio = this.$('.playMusicAudio')[0];\n                if (this.musicUrl !== '') {\n                    if (!audio.paused) {\n                        audio.pause()\n                    } else {\n                        audio.play()\n                    }\n                    this.isPlay = !this.isPlay\n                }\n            },\n            //接受子路由传递过来的歌单信息\n            async setSongListInfo(songList, curId) {\n                this.playListInfo = songList\n                //将当前歌单信息放入localStorage\n                window.localStorage.setItem('playList', songList)\n\n                //设置当前歌单点击需要播放的音乐链接\n                const res = await this.$http.get('song/url', {params: {id: curId}})\n\n                if (res.data.data[0].url === null) {\n                    this.$message.info('当前歌曲暂不可用,已为您自动跳过')\n                    this.curId = curId\n                    this.changeNextMusic()\n                } else {\n                    this.musicUrl = res.data.data[0].url\n                    //设置当前歌单的详细信息\n                    this.$http.get('song/detail', {params: {ids: curId}}).then(res => {\n                        this.music = res.data.songs[0]\n                    })\n                    //设置当前播放音乐的id\n                    this.curId = curId\n                    //设置audio的各种信息\n                    this.setAudioTagsInfo()\n                }\n            },\n            //根据id获取音乐详情\n            getMusicDetail(musicId) {\n                this.$http.get('song/detail', {params: {ids: musicId}}).then(res => {\n                    this.music = res.data.songs[0]\n                })\n            },\n            //根据id获取音乐url\n            getMusicUrl(musicId) {\n                this.$http.get('song/url', {params: {id: musicId}}).then(res => {\n                    this.musicUrl = res.data.data[0].url\n                })\n            },\n            //切换下一首歌\n            changeNextMusic() {\n                const nextOne = this.playListInfo[this.playListInfo.findIndex(target => {\n                    return target === this.curId\n                }) + 1];\n                this.setSongListInfo(this.playListInfo, nextOne)\n            },\n            //切换上一首歌\n            changePrevMusic() {\n                const prevOne = this.playListInfo[this.playListInfo.findIndex(target => {\n                    return target === this.curId\n                }) - 1];\n                this.setSongListInfo(this.playListInfo, prevOne)\n            },\n            //点击右下角图标展示右侧的歌单信息\n            showRightPlayList() {\n                this.showRightPlayListDialog = true\n                //处理歌单所有歌曲信息的查询(根据id)\n                this.$http.get('song/detail', {params: {ids: window.localStorage.getItem('playList')}}).then(res => {\n                    this.currentMusicListInfo = res.data.songs\n                    //处理时长数据\n                    this.currentMusicListInfo.forEach(item => {\n                        const dt = new Date(item.dt)\n                        const mm = (dt.getMinutes() + '').padStart(2, '0')\n                        const ss = (dt.getSeconds() + '').padStart(2, '0')\n\n                        item.dt = mm + ':' + ss\n                    })\n                })\n            },\n            //表单的双击事件\n            playRightMusicList(row) {\n                //右下角点击事件生效  播放该音乐\n                this.setSongListInfo(this.playListInfo, row.id)\n            },\n            //跳转音乐播放详情界面\n            toMusicDetailPage() {\n                this.$router.push('/musicDetail/' + this.curId);\n            },\n            //点击未登录按钮\n            handleLogin() {\n                this.loginDialogVisible = true\n            },\n            //点击登录\n            loginMusic() {\n                this.$refs.loginInfoRuleForm.validate(valid => {\n                    if (!valid) return this.$message.error('请填写正确的信息')\n                    this.$http.get('login/cellphone', {params: this.loginInfo}).then(res => {\n                        if (res.status !== 200) return this.$message.error('登陆失败,请检查登录信息!')\n                        //保存cookie的信息\n                        window.localStorage.setItem('musicCookie', res.data.cookie)\n                        //保存用户信息,退出时删除\n                        window.localStorage.setItem('currentUserInfo', JSON.stringify(res.data.profile))\n                        //放入用户的信息\n                        this.currentUserInfo = res.data.profile\n\n                        this.getUserPrivatePlayList()\n\n                        //隐藏弹窗\n                        this.loginDialogVisible = false\n                    })\n                })\n            },\n            //查询用户私人歌单\n            getUserPrivatePlayList() {\n                this.$http.get('user/playlist', {params: {uid: this.currentUserInfo.userId}}).then(r => {\n                    this.currentUserPlayList = r.data.playlist\n                })\n            },\n            //重设登录框的表单信息\n            handleLoginDialogClosed() {\n                this.$refs.loginInfoRuleForm.resetFields();\n            },\n            //退出登录\n            logout() {\n                this.$http.get('logout').then(res => {\n                    //当前用户信息设置为null\n                    this.currentUserInfo = null\n                    //存储用户信息的localstorage设置为null\n                    window.localStorage.setItem('currentUserInfo', null)\n                    //查询出来的用户私人歌单设置为空\n                    this.currentUserPlayList = []\n                })\n            },\n            //点击切换当前用户歌单的歌单id\n            changePlaylistId(playListId) {\n                //让歌单页面可以识别到歌单切换\n                //使用自定义的设置我们的localstorage 以便于后面的组件可以监听\n                this.resetSetItem('currentId', playListId);\n            },\n            //跳转搜索页面\n            toSearchPage() {\n                if (this.searchData.trim() !== '') {//搜索条件不为空\n                    //encodeURIComponent参数转换 应对中文参数\n                    this.$router.replace('/search/' + encodeURIComponent(this.searchData))\n                    //调用子类的方法 实现搜索响应式\n                    this.$refs.child.toSingSearchPage()\n                }\n            }\n        },\n        components: {\n            child: SearchPage\n        },\n\n    }\n</script>\n\n\n<style lang=\"less\" scoped>\n    .el-header {\n        background: rgb(236, 65, 65);\n        height: 50px;\n        display: flex;\n\n        .logo {\n            width: 25px;\n            height: 25px;\n            margin: 15px 10px;\n            border-radius: 100px;\n        }\n\n        span {\n            font-size: 20px;\n            font-family: \"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"微软雅黑\", Arial, sans-serif;\n            font-weight: 500;\n            margin-top: 15px;\n            color: white;\n        }\n\n        .el-input {\n            width: 275px;\n        }\n\n        /deep/ .el-input__inner {\n            opacity: 0.4;\n            margin-top: 15px;\n            margin-left: 50px;\n            width: 225px;\n            height: 25px;\n            border-radius: 12px;\n        }\n\n        .searchBtn {\n            opacity: 0;\n            position: absolute;\n            float: right;\n            width: 1px;\n            height: 24px;\n            left: -3px;\n            margin-top: 15px !important;\n            border-radius: 60%;\n        }\n    }\n\n    .rightContainer {\n        margin-left: auto;\n\n        span {\n            font-size: 17px;\n            color: white;\n        }\n\n        .userIcon {\n            width: 30px;\n            height: 30px;\n            border-radius: 60%;\n            margin-top: 13px;\n            margin-right: 10px;\n        }\n    }\n\n    /deep/ .el-menu-item-group__title {\n        padding-left: 5px !important;\n        margin-top: 7px;\n    }\n\n    .el-menu-item {\n        height: 45px;\n        line-height: 3.45em;\n    }\n\n    .el-menu-item.is-active {\n        color: black;\n        border-left: 2px solid red !important;\n    }\n\n    .el-menu {\n        height: 92%;\n    }\n\n    .el-card.is-always-shadow, .el-card.is-hover-shadow:focus, .el-card.is-hover-shadow:hover {\n        box-shadow: 0 0 0 0;\n\n    }\n\n    /deep/ .el-card__body {\n        padding: 0 !important;\n    }\n\n    /deep/ .el-slider__button {\n        border: 2px solid rgb(198, 47, 47) !important;\n    }\n\n    /deep/ .el-slider__button {\n        width: 10px !important;\n        height: 10px !important;\n    }\n\n    /deep/ .el-slider__bar {\n        background-color: rgb(198, 47, 47);\n    }\n\n    .el-slider {\n        width: 80%;\n        margin: 0 auto;\n    }\n\n    .laba {\n        position: absolute;\n        top: 6px;\n        left: 15%;\n        cursor: pointer\n    }\n\n    .el-footer {\n        padding: 0;\n    }\n\n    /deep/ .el-dialog--center {\n        text-align: end;\n        float: right;\n    }\n\n    /deep/ .el-dialog__title {\n        float: left;\n    }\n</style>\n"]}]}