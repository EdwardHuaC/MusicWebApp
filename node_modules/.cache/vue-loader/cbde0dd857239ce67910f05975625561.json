{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/singer/SingerListPage.vue?vue&type=style&index=0&id=71dc5a8e&lang=less&scoped=true&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/singer/SingerListPage.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_less-loader@6.2.0@less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3R5cGVzOmhvdmVyLCAjYXJlYXM6aG92ZXIgewogICAgY29sb3I6IHJlZDsKfQoKLmlzQWN0aXZlLCAuaXNBY3RpdmVCeVR5cGVzIHsKICAgIGNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["SingerListPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;;AAEA;AACA;AACA","file":"SingerListPage.vue","sourceRoot":"src/components/findMusic/singer","sourcesContent":["<template>\n    <el-container style=\"margin-bottom: 55px;\">\n        <el-header style=\"height: 80px;\">\n            <p>\n                语种:\n                <span id=\"areas\" v-for=\"(item,index) in singerLanguage\" :class=\"index===0? 'isActive' : 'area'+item.id\"\n                      @click=\"changeMusicListTypes(item.id)\"\n                      style=\"margin-left: 25px;cursor: pointer;\">{{item.name}}</span>\n            </p>\n            <p>\n                分类:\n                <span id=\"types\" v-for=\"(item,index) in singerType\"\n                      :class=\"index===0? 'isActiveByTypes' : 'type'+item.id\"\n                      @click=\"changeMusicListSex(item.id)\"\n                      style=\"margin-left: 25px;cursor: pointer;\">{{item.name}}</span>\n\n                <!--                @click=\"changeMusicListCat(item.name,index)\"-->\n            </p>\n        </el-header>\n\n        <el-main>\n\n            <el-row :gutter=\"10\">\n\n                <el-col :span=\"4\" v-for=\"(item,index) in singerList\" style=\"margin-top: 20px;position:relative;\"\n                        :key=\"index\">\n\n                    <div>\n                        <el-image :src=\"item.img1v1Url\" @click=\"toSingerDetailPage(item.id)\"\n                                  style=\"box-shadow: 0 0 2px 2px gray;border-radius: 10px;cursor: pointer\">\n                        </el-image>\n                    </div>\n\n\n                    <h1 @click=\"toSingerDetailPage(item.id)\" style=\"cursor:pointer;\">{{item.name}}</h1>\n\n                </el-col>\n            </el-row>\n            <!--分页-->\n            <el-pagination background\n                           layout=\"prev,next\"  :page-size=\"queryInfo.limit\"\n                           @current-change=\"handleCurrentChange\">\n            </el-pagination>\n\n        </el-main>\n    </el-container>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                //歌手分类查询条件\n                queryInfo: {\n                    type: -1,\n                    area: -1,\n                    limit: 12,\n                    offset: 0,\n                },\n                //歌手类型分类标签\n                singerType: [\n                    {id: -1, name: '全部'},\n                    {id: 1, name: '男歌手'},\n                    {id: 2, name: '女歌手'},\n                    {id: 3, name: '乐队'}\n                ],\n                //歌手语种分类\n                singerLanguage: [\n                    {id: -1, name: '全部'},\n                    {id: 7, name: '华语'},\n                    {id: 96, name: '欧美'},\n                    {id: 8, name: '日本'},\n                    {id: 16, name: '韩国'},\n                    {id: 0, name: '其他'}\n                ],\n                //歌手数据\n                singerList: [],\n                //上一次点击的语种分类(默认的是type-1)\n                prevClickArea: 'area-1',\n                //上一次点击的语种分类(默认的是type-1)\n                prevClickType: 'type-1'\n            }\n        },\n        created() {\n            //获取歌手数据\n            this.getSingerList()\n        },\n        methods: {\n            //获取歌手数据\n            getSingerList() {\n                this.$http.get('artist/list', {params: this.queryInfo}).then(res => {\n                    this.singerList = res.data.artists\n                })\n            },\n            //分页插件页数改变\n            handleCurrentChange(newPage) {\n                this.queryInfo.offset = (newPage - 1) * this.queryInfo.limit\n                this.getSingerList();\n            },\n            //改变语种分类\n            changeMusicListTypes(areaId) {\n                //撤销上一次被选中的标签的样式\n                this.$('.isActive').eq(0).attr('class', this.prevClickArea)\n                //这次点击的标签高亮\n                this.$('.area' + areaId).eq(0).attr('class', 'isActive')\n                //赋值存储\n                this.prevClickArea = 'area'+areaId\n                //修改查询条件\n                this.queryInfo.area = areaId\n                this.getSingerList()\n            },\n            //改变歌手性别分类\n            changeMusicListSex(typeId) {\n                //撤销上一次被选中的标签的样式\n                this.$('.isActiveByTypes').eq(0).attr('class', this.prevClickType)\n                //这次点击的标签高亮\n                this.$('.type' + typeId).eq(0).attr('class', 'isActiveByTypes')\n                //赋值存储\n                this.prevClickType = 'type'+typeId\n                //修改查询条件\n                this.queryInfo.type = typeId\n                this.getSingerList()\n            },\n            //跳转歌手详情页\n            toSingerDetailPage(id) {\n                this.$router.push('/singer/'+id);\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    #types:hover, #areas:hover {\n        color: red;\n    }\n\n    .isActive, .isActiveByTypes {\n        color: red;\n    }\n</style>\n"]}]}