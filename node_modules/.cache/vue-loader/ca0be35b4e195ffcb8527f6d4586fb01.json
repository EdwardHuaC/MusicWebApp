{"remainingRequest":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/newMusic/NewMusic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/src/components/findMusic/newMusic/NewMusic.vue","mtime":1613060486000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/conghua/Study/Projects/Vue_CloudMusic/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgLy/nrZvpgInmnaHku7YKICAgICAgICAgICAgcXVlcnlJbmZvOiB7CiAgICAgICAgICAgICAgICB0eXBlOiAwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8v5qCH562+5pWw5o2uCiAgICAgICAgICAgIG11c2ljVHlwZTogWwogICAgICAgICAgICAgICAge3R5cGU6IDAsIG5hbWU6ICflhajpg6gnfSwKICAgICAgICAgICAgICAgIHt0eXBlOiA3LCBuYW1lOiAn5Y2O6K+tJ30sCiAgICAgICAgICAgICAgICB7dHlwZTogOTYsIG5hbWU6ICfmrKfnvo4nfSwKICAgICAgICAgICAgICAgIHt0eXBlOiAxNiwgbmFtZTogJ+mfqeWbvSd9LAogICAgICAgICAgICAgICAge3R5cGU6IDgsIG5hbWU6ICfml6XmnKwnfQogICAgICAgICAgICBdLAogICAgICAgICAgICAvL+acgOaWsOmfs+S5kOeahOaVsOaNrgogICAgICAgICAgICBuZXdNdXNpY0luZm86IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBpZDogMCwKICAgICAgICAgICAgICAgICAgICBhbGJ1bTogewogICAgICAgICAgICAgICAgICAgICAgICBwaWNVcmw6ICcnCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIC8v5LiK5LiA5qyh54K55Ye755qE5YiG57G7KOm7mOiupOeahOaYr3R5cGUtMSkKICAgICAgICAgICAgcHJldlR5cGU6ICd0eXBlcycgKyAwLAogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIC8v6I635Y+W5pyA5paw6Z+z5LmQCiAgICAgICAgdGhpcy5nZXROZXdNdXNpYygpCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGdldE5ld011c2ljKCkgewogICAgICAgICAgICB0aGlzLiRodHRwLmdldCgndG9wL3NvbmcnLCB7cGFyYW1zOiB0aGlzLnF1ZXJ5SW5mb30pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHRoaXMubmV3TXVzaWNJbmZvID0gcmVzLmRhdGEuZGF0YQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgLy/mlLnlj5jnrZvpgInmnaHku7YKICAgICAgICBjaGFuZ2VUeXBlKHR5cGVJZCkgewogICAgICAgICAgICAvL+aSpOmUgOS4iuS4gOasoeiiq+mAieS4reeahOagh+etvueahOagt+W8jwogICAgICAgICAgICB0aGlzLiQoJy5pc0FjdGl2ZScpLmVxKDApLmF0dHIoJ2NsYXNzJywgdGhpcy5wcmV2VHlwZSkKICAgICAgICAgICAgLy/ov5nmrKHngrnlh7vnmoTmoIfnrb7pq5jkuq4KICAgICAgICAgICAgdGhpcy4kKCcudHlwZXMnICsgdHlwZUlkKS5lcSgwKS5hdHRyKCdjbGFzcycsICdpc0FjdGl2ZScpCiAgICAgICAgICAgIHRoaXMucXVlcnlJbmZvLnR5cGUgPSB0eXBlSWQKICAgICAgICAgICAgLy/otYvlgLzlrZjlgqgKICAgICAgICAgICAgdGhpcy5wcmV2VHlwZSA9ICd0eXBlcycgKyB0eXBlSWQKICAgICAgICAgICAgdGhpcy5nZXROZXdNdXNpYygpCiAgICAgICAgfSwKICAgICAgICAvL+aSreaUvueCueWHu+eahOacgOaWsOmfs+S5kAogICAgICAgIGNoYW5nZU5ld1VybChtdXNpY0lkKSB7CiAgICAgICAgICAgIHZhciBwbGF5bGlzdCA9IFtdCiAgICAgICAgICAgIHRoaXMubmV3TXVzaWNJbmZvLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgICBwbGF5bGlzdC5wdXNoKGl0ZW0uaWQpCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3NldFNvbmdMaXN0SW5mbycsIHBsYXlsaXN0LCBtdXNpY0lkKQogICAgICAgIH0sCiAgICB9Cn0K"},{"version":3,"sources":["NewMusic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NewMusic.vue","sourceRoot":"src/components/findMusic/newMusic","sourcesContent":["<template>\n    <!--最新音乐-->\n    <el-row style=\"margin-top: 25px;\">\n        <p>\n            语种:\n            <span id=\"types\" v-for=\"(item,index) in musicType\" @click=\"changeType(item.type)\"\n                  :class=\"index===0 ? 'isActive' : 'types'+ item.type\"\n                  style=\"margin-left: 25px;cursor: pointer;\">{{item.name}}</span>\n        </p>\n\n        <!--左侧-->\n        <el-col :span=\"20\" :offset=\"2\">\n            <el-table :data=\"newMusicInfo\" stripe\n                      :show-header=\"false\">\n\n                <el-table-column type=\"index\">\n                    <template scope=\"scope\">\n                        {{scope.$index+1 >= 10 ? scope.$index+1: '0'+(scope.$index+1).toString()}}\n                    </template>\n                </el-table-column>\n\n                <el-table-column>\n                    <template scope=\"scope\">\n\n                        <i class=\"el-icon-video-play\" @click=\"changeNewUrl(scope.row.id)\"\n                           style=\"position: absolute;font-size: 25px;top: 35px;left:35px;z-index: 8;cursor:pointer;\"></i>\n\n                        <el-image :src=\"scope.row.album.picUrl\" @click=\"changeNewUrl(scope.row.id)\"\n                                  style=\"width: 75px;height: 75px;cursor:pointer;\"></el-image>\n\n                        <span style=\"position: absolute;top: 25px;font-size: 15px;font-weight: 500\">\n                                    {{scope.row.name}}\n                                </span>\n                        <span style=\"position: absolute;bottom: 25px;font-size: 12px;font-weight: 500\">\n                                    {{scope.row.album.name}}\n                                </span>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </el-col>\n    </el-row>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                //筛选条件\n                queryInfo: {\n                    type: 0\n                },\n                //标签数据\n                musicType: [\n                    {type: 0, name: '全部'},\n                    {type: 7, name: '华语'},\n                    {type: 96, name: '欧美'},\n                    {type: 16, name: '韩国'},\n                    {type: 8, name: '日本'}\n                ],\n                //最新音乐的数据\n                newMusicInfo: [\n                    {\n                        id: 0,\n                        album: {\n                            picUrl: ''\n                        }\n                    },\n\n                ],\n                //上一次点击的分类(默认的是type-1)\n                prevType: 'types' + 0,\n            }\n        },\n        created() {\n            //获取最新音乐\n            this.getNewMusic()\n        },\n        methods: {\n            getNewMusic() {\n                this.$http.get('top/song', {params: this.queryInfo}).then(res => {\n                    this.newMusicInfo = res.data.data\n                })\n            },\n            //改变筛选条件\n            changeType(typeId) {\n                //撤销上一次被选中的标签的样式\n                this.$('.isActive').eq(0).attr('class', this.prevType)\n                //这次点击的标签高亮\n                this.$('.types' + typeId).eq(0).attr('class', 'isActive')\n                this.queryInfo.type = typeId\n                //赋值存储\n                this.prevType = 'types' + typeId\n                this.getNewMusic()\n            },\n            //播放点击的最新音乐\n            changeNewUrl(musicId) {\n                var playlist = []\n                this.newMusicInfo.forEach(item => {\n                    playlist.push(item.id)\n                })\n                this.$emit('setSongListInfo', playlist, musicId)\n            },\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .isActive {\n        color: red;\n    }\n</style>\n"]}]}